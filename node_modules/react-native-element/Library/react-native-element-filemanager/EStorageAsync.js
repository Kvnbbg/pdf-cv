/**
 * Created on 13:49 2019/03/20.
 * file name EStorageAsync
 * by wangtieshan
 */

import { nativeFileManager } from './EFileManager';

export class EStorageAsync {

    static stand(): EStorageAsync {
        return new EStorageAsync();
    }

    /**
     * 创建的键值对存储文件在沙盒中的名称
     * @type {string}
     */
    suitName: string = 'com.reactnative.e.default';

    /**
     * 构造方法
     * @param suitName 创建的键值对存储文件在沙盒中的名称
     */
    constructor(suitName) {
        if (suitName) {
            this.suitName = suitName;
        }
    }

    /**
     * 沙盒中存储键值对
     */
    storage (key, obj) {
        try {
            nativeFileManager.storage(key, JSON.stringify(obj), this.suitName);
        } catch (e) {}
    }

    /**
     * 沙盒中存储键字符串
     */
    storageString(key: string, string: string) {
        nativeFileManager.storageString(key, string, this.suitName);
    }

    /**
     * 沙盒中存储数字
     */
    storageNumber(key: string, number: number) {
        nativeFileManager.storageNumber(key, number, this.suitName);
    }

    /**
     * 沙盒中存储 Bool 类型
     */
    storageBool(key: string, bool: boolean) {
        nativeFileManager.storageBool(key, bool, this.suitName);
    }

    /**
     * 根据key获取沙盒存储的值
     * @param key 键
     * @param res 回调
     */
    getStorage(key, res: (any)=>void) {
        if (!key || !res) { return; }
        nativeFileManager.getStorage(key, this.suitName, (error, result)=>{
            if (result) {
                try {
                    res(JSON.parse(result))
                }
                catch (e) {
                    res(null);
                }
            } else {
                res(null);
            }
        })
    }

    /**
     * 根据key获取沙盒存储的值
     * @param key 键
     * @param res 回调
     */
    getStorageString(key: string, res: (string)=>void) {
        if (!key || !res) { return; }
        nativeFileManager.getStorageString(key, this.suitName, (error, result)=>{
            res(result);
        });
    }

    /**
     * 根据key获取沙盒存储的值
     * @param key 键
     * @param res 回调
     */
    getStorageNumber(key: string, res: (number)=>void) {
        if (!key || !res) { return; }
        nativeFileManager.getStorageNumber(key, this.suitName, (error, result)=>{
            res(result);
        });
    }

    /**
     * 根据key获取沙盒存储的值
     * @param key 键
     * @param res 回调
     */
    getStorageBool(key: string, res: (boolean)=>void) {
        if (!key || !res) { return; }
        nativeFileManager.getStorageBool(key, this.suitName, (error, result)=>{
            res(result);
        });
    }
}