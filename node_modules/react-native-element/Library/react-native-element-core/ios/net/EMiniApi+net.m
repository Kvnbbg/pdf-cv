//
//  EMiniApi+net.m
//  reactnativeelement
//
//  Created by 王铁山 on 2018/5/19.
//  Copyright © 2018年 王铁山. All rights reserved.
//

#import "EMiniApi+net.h"

#import "EMiniTool.h"

#import "EMiniNet.h"

//#import "AFNetworking.h"

@implementation EMiniApi (net)

/**
  发起一个网络请求
 
    @{
        @"path": @"",
        @"header": @{

        },
        @"params": @{

        },
        @"method": @"POST",
        @"Content-Type": @"application/json",
    }
 
 @param NSString obj string
 */
RCT_EXPORT_METHOD(request: (NSString *)options callBack: (RCTResponseSenderBlock)callback) {
    
    NSMutableDictionary * params = [[NSMutableDictionary alloc] initWithDictionary: [EMiniTool stringToObject:options]];
    
    // 处理参数
    if (!params || ![params isKindOfClass:[NSDictionary class]]) {
        callback(@[[EMiniTool errorStringWithDesck:@"invalid request params"], [EMiniTool objToString:@{}]]);
        return;
    }
    
    // 处理路径
    NSString * path = params[@"path"] ?: @"";
    
    // 处理头部
    NSDictionary * header = nil;
    
    if (params[@"header"]) {
        header = params[@"header"];
    }
    
    // method
    NSString * method = @"POST";
    
    if (params[@"method"]) {
        if (![@[@"POST", @"GET"] containsObject:method]) {
            callback(@[[EMiniTool errorStringWithDesck:@"invalid request httpMethod"], [EMiniTool objToString:@{}]]);
            return;
        }
        method = params[@"method"];
    }
    
    // content-type
    NSString * contentType = @"application/json";
    
    if (params[@"contentType"]) {
        contentType = params[@"contentType"];
    }
    
    EMiniRequest * request = [[EMiniRequest alloc] init];
    
    request.httpMethod = method;
    
    request.contentType = contentType;
    
    request.path = path;
    
    request.header = header;
    
    request.body = params[@"params"];
    
    [request setComplete:^(id data, NSURLResponse * response, NSError * error) {
        
        NSMutableDictionary * res = [NSMutableDictionary dictionary];
        
        if ([response isKindOfClass:[NSHTTPURLResponse class]]) {
            NSHTTPURLResponse * httpResponse = (NSHTTPURLResponse *)response;
            res[@"header"] = [httpResponse allHeaderFields];
            res[@"statusCode"] = @(httpResponse.statusCode);
        }
        
        if (data) {
            res[@"data"] = data;
        }
        
        callback(@[error ? [EMiniTool errorStringWithError:error] : [NSNull null], [EMiniTool objToString:res.copy] ?: [NSNull null]]);
    }];
    
    [[EMiniNet share] reqeust:request];
    
}

@end
