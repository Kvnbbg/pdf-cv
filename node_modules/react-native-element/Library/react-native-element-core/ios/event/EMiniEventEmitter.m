/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

#import "EMiniEventEmitter.h"

#import "EMiniTool.h"

@interface EMiniEventEmitter ()

@property (nonatomic, assign) BOOL shouldEmit;

@property (nonatomic, strong) NSMutableArray * eventNames;

@end

@implementation EMiniEventEmitter

RCT_EXPORT_MODULE();

- (NSMutableArray *)eventNames {
    if (!_eventNames) {
        _eventNames = [NSMutableArray array];
    }
    return _eventNames;
}

- (NSArray<NSString *> *)supportedEvents
{
  return self.eventNames;
}

- (void)startObserving
{
  _shouldEmit = YES;
}

- (void)stopObserving
{
  _shouldEmit = NO;
}

- (void)addListener:(NSString *)eventName {
    if (!eventName){return;}
    EMiniLog([NSString stringWithFormat:@"EMini program has find js register event: %@", eventName]);
    [self.eventNames addObject:eventName];
    [super addListener:eventName];
}

- (void)sendEvent: (NSString *)eventName body: (id)body {
    if (_shouldEmit && eventName && [self.eventNames containsObject:eventName]) {
        EMiniLog([NSString stringWithFormat:@"EMini program will send to js event\neventName: %@\ndata: %@", eventName, body]);
        [self sendEventWithName:eventName body:body];
    }
}

@end
