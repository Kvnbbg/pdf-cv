//
//  EMiniBaseViewController+push.m
//  reactnativeelement
//
//  Created by 王铁山 on 2018/6/12.
//  Copyright © 2018年 王铁山. All rights reserved.
//

#import "EMiniBaseViewController+push.h"

@implementation EMiniBaseViewController (push)

- (id<UIViewControllerTransitioningDelegate>)miniTransitionDelegate {
    if (!_miniTransitionDelegate) {
        _miniTransitionDelegate = [[EMiniPresentPushDelegate alloc] init];
    }
    return _miniTransitionDelegate;
}

@end

@implementation EMiniPresentPushDelegate

- (id<UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)presented presentingController:(UIViewController *)presenting sourceController:(UIViewController *)source {
    EMiniPresentPushAnimateDelegate * delegate = [[EMiniPresentPushAnimateDelegate alloc] init];
    delegate.show = true;
    return delegate;
}

- (id<UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)dismissed {
    EMiniPresentPushAnimateDelegate * delegate = [[EMiniPresentPushAnimateDelegate alloc] init];
    delegate.show = false;
    return delegate;
}

@end

@implementation EMiniPresentPushAnimateDelegate

- (NSTimeInterval)transitionDuration:(id<UIViewControllerContextTransitioning>)transitionContext {
    return 0.3;
}

- (UIViewController *)topVC: (UIViewController *)top {
    if ([top isKindOfClass:[UITabBarController class]]) {
        return [self topVC:((UITabBarController *)top).selectedViewController];
    } else if ([top isKindOfClass:[UINavigationController class]]) {
        return [self topVC:((UINavigationController *)top).topViewController];
    } else if (top.presentedViewController && !top.presentedViewController.isBeingDismissed) {
        return top.presentedViewController;
    } else {
        return top;
    }
}

- (void)animateTransition:(id<UIViewControllerContextTransitioning>)transitionContext {
    
    UIView * containerView = [transitionContext containerView];
    
    containerView.backgroundColor = [UIColor colorWithWhite:0 alpha:0];
    
    if (!self.show) {
        [[self topVC: [transitionContext viewControllerForKey:UITransitionContextToViewControllerKey]] viewWillAppear:true];
    }
    
    UIView * toView = self.show ?
    [transitionContext viewForKey:UITransitionContextToViewKey] :
    [transitionContext viewForKey:UITransitionContextFromViewKey];
    
    if (self.show) {
        [containerView addSubview:toView];
        toView.frame = CGRectMake([UIScreen mainScreen].bounds.size.width, 0, toView.frame.size.width, toView.frame.size.height);
    }
    
    [UIView animateWithDuration: transitionContext.animated ? [self transitionDuration:transitionContext] : 0 animations:^{
        if (self.show) {
            toView.frame = CGRectMake(0, 0, toView.frame.size.width, toView.frame.size.height);
        } else {
            toView.frame = CGRectMake([UIScreen mainScreen].bounds.size.width, 0, toView.frame.size.width, toView.frame.size.height);
        }
        
    } completion:^(BOOL finished) {
        [transitionContext completeTransition: ![transitionContext transitionWasCancelled]];
    }];
    
}

@end
