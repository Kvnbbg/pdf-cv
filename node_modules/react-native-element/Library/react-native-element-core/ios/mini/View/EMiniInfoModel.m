//
//  EMiniInfoModel.m
//  reactnativeelement
//
//  Created by 王铁山 on 2018/5/10.
//  Copyright © 2018年 王铁山. All rights reserved.
//

#import "EMiniInfoModel.h"

@implementation EMiniInfoModel

- (instancetype)initWithCoder:(NSCoder *)coder
{
    self = [super init];
    if (self) {
        self.miniId = [coder decodeObjectForKey:@"miniId"];
        self.iconURL = [coder decodeObjectForKey:@"iconUrl"];
        self.name = [coder decodeObjectForKey:@"name"];
        self.version = [coder decodeIntegerForKey:@"version"];
    }
    return self;
}

- (void)encodeWithCoder:(NSCoder *)aCoder {
    [aCoder encodeInteger:self.version forKey:@"version"];
    [aCoder encodeObject:self.iconURL forKey:@"iconUrl"];
    [aCoder encodeObject:self.miniId forKey:@"miniId"];
    [aCoder encodeObject:self.name forKey:@"name"];
}

- (BOOL)parse:(NSDictionary *)data {
    if (data) {
        [self setValuesForKeysWithDictionary:data];
        if (!self.name || !self.iconURL) {
            return false;
        }
        return true;
    }
    return false;
}

- (void)setValue:(id)value forUndefinedKey:(NSString *)key {
    
}

@end

@implementation RNUpdateModel

@synthesize description;

- (instancetype)init
{
    self = [super init];
    if (self) {
        self.fullupdate = true;
        self.forceupdate = true;
    }
    return self;
}

- (BOOL)parse:(NSDictionary *)data {
    if ([data isKindOfClass:[NSDictionary class]]) {
        [self setValuesForKeysWithDictionary:data];
        if (data[@"patch"]) {
            RNUpdatePatchModel * patchModel = [[RNUpdatePatchModel alloc] init];
            [patchModel parse:data[@"patch"]];
            self.patch = patchModel;
        }
        if (!self.path || !self.version) {
            return false;
        }
        return true;
    }
    return false;
}

- (void)setValue:(id)value forUndefinedKey:(NSString *)key {
    
}

@end

@implementation RNUpdatePatchModel

- (instancetype)init
{
    self = [super init];
    if (self) {
        self.empty = false;
    }
    return self;
}

- (BOOL)parse:(NSDictionary *)data {
    if ([data isKindOfClass:[NSDictionary class]]) {
        [self setValuesForKeysWithDictionary:data];
    }
    return true;
}

- (void)setValue:(id)value forUndefinedKey:(NSString *)key {
    
}

@end
