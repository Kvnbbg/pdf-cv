//
//  EMiniBaseViewController+tool.m
//  Pods
//
//  Created by macpro on 6/1/18.
//
//

#import "EMiniBaseViewController+tool.h"

#import "EMiniViewManager.h"

#import "EMiniInfoModel.h"

#import "EMiniApi.h"

#import <React/RCTDevMenu.h>

//#import "WXApi.h"

@implementation EMiniBaseViewController (tool)

- (void)showFunc {
#if RCT_DEV
    
    UIAlertController * vc = [UIAlertController alertControllerWithTitle:nil message:nil preferredStyle:UIAlertControllerStyleActionSheet];
    
    [vc addAction:[UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:nil]];
    
    __weak typeof (EMiniBaseViewController *)wSelf = self;
    /*
     [vc addAction:[UIAlertAction actionWithTitle:@"分享至微信" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
     [wSelf shareToWechat];
     }]];
     */
    [vc addAction:[UIAlertAction actionWithTitle:self.showFuncView ? @"关闭调试按钮（右上角两个按钮）" : @"打开调试按钮（右上角两个按钮）" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        [wSelf setShowFuncView:!self.showFuncView];
    }]];
    
    [vc addAction:[UIAlertAction actionWithTitle:[EMiniViewManager hasOpenDebug:self.miniId] ? @"关闭调试" : @"打开调试" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        [wSelf chooseDebugSwitch];
    }]];
    
    
    [self presentViewController:vc animated:true completion:nil];
#endif
}

/**
 进入 debug 模式
 */
- (void)chooseDebugSwitch {
    
    UIAlertController * vc = [UIAlertController alertControllerWithTitle:nil message:nil preferredStyle:UIAlertControllerStyleAlert];
    
    vc.title = [EMiniViewManager hasOpenDebug:self.miniId] ? @"关闭调试" : @"打开调试";
    
    vc.message = @"调试功能开关将在下一次打开小程序时生效";
    
    __weak typeof (EMiniBaseViewController *)wSelf = self;
    
    __weak typeof (UIAlertController *)wAlertVC = vc;
    
    /// 没有打开则添加输入框输入信息
    if (![EMiniViewManager hasOpenDebug:self.miniId]) {
        [vc addTextFieldWithConfigurationHandler:^(UITextField * _Nonnull textField) {
            textField.placeholder = @"输入IP地址（默认：localhost）";
            textField.text = ([EMiniViewManager latestDebugIp] ?:@"localhost");
        }];
        [vc addTextFieldWithConfigurationHandler:^(UITextField * _Nonnull textField) {
            textField.placeholder = @"输入端口号（默认：8081）";
        }];
        [vc addTextFieldWithConfigurationHandler:^(UITextField * _Nonnull textField) {
            textField.placeholder = @"输入 page 参数（可选）";
        }];
    } else {
        [EMiniViewManager closeDebug:self.miniId];
    }
    
    [vc addAction:[UIAlertAction actionWithTitle:@"关闭" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        NSArray <UITextField *> * tfs = wAlertVC.textFields;
        if (tfs.count) {
            NSMutableDictionary * dic = [NSMutableDictionary dictionary];
            dic[@"debugIp"] = tfs[0].text.length ? tfs[0].text : @"localhost";
            dic[@"debugPort"] = tfs[1].text.length ? tfs[1].text : @"8081";
            if (tfs[2].text.length) {
                dic[@"page"] = tfs[2].text;
            }
            [EMiniViewManager recordLatestDebugIp:dic[@"debugIp"]];
            [EMiniViewManager openDebug:wSelf.miniId options:dic.copy];
        }
        [self invalidAndDismiss:true];
    }]];
    
    [self presentViewController:vc animated:true completion:nil];
}

- (void)shareToWechat {
    
    //    [WXApi registerApp:@"wx09c1128685f724ab"];
    //
    //    EMiniApi * api = [[EMiniApi alloc] init:self.miniId];
    //
    //    [api downLoadIcon:self.infoModel.iconURL result:^(UIImage *image) {
    //
    //        WXMediaMessage * message = [[WXMediaMessage alloc] init];
    //
    //        message.title = self.infoModel.name;
    //
    //        [message setThumbImage:image];
    //
    //        WXWebpageObject * web = [[WXWebpageObject alloc] init];
    //
    //        web.webpageUrl = @"https://onety.cn/sf/smmini.html";
    //
    //        message.mediaObject = web;
    //
    //        SendMessageToWXReq * send = [[SendMessageToWXReq alloc] init];
    //
    //        send.bText = false;
    //
    //        send.message = message;
    //
    //        send.scene = WXSceneSession;
    //        
    //        [WXApi sendReq:send];
    //    }];
}
@end
