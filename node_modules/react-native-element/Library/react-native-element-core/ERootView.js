/**
 * Created on 15:52 2019/03/13.
 * file name ERootView
 * by wangtieshan
 */

import React from 'react';

import {
    View,
    Platform
} from 'react-native';

import { isIOS } from '../react-native-element-core/API/EAPITool';

import * as EHint from '../react-native-element-hint/EHint';

import * as EAlert from '../react-native-element-alert/EAlert';

import * as EPickerView from '../react-native-element-pickview/EPickerView';

import { EAlertSheetOptions } from '../react-native-element-alertsheet/EAlertSheet';

import { EDatePickerViewOptions } from '../react-native-element-datepickview/EPickerView';

import EPreviewImage from '../react-native-element-previewimage/EPreviewImage';

import { EPreviewImageOptions, previewImage } from '../react-native-element-previewimage/ENativePreviewImage';

/**
 * 全局调用 UI API 的方法
 */
export interface EGlobalUIAPI {

    /**
     * 提示语
     */
    makeHint: (EHint.EHintOptions) => void;

    /**
     * 展示黑色背景 loading
     */
    makeActivity: (EHint.EHintOptions) => void;

    /**
     * 隐藏黑色背景 loading
     */
    hiddenActivity: () => void;

    /**
     * 屏幕中心弹框
     */
    alert: (EAlert.EAlertType) => void;

    /**
     * 底部 弹框 alertSheet
     */
    alertSheet: (EAlertSheetOptions) => void;

    /**
     * 选择时间
     */
    pickDate: (EDatePickerViewOptions) => void;

    /**
     * 从底部弹出选择器
     */
    pick: (EPickerView.EPickerViewOptions) => void;

    /**
     * 图片预览
     */
    previewImage: (EPreviewImageOptions) => void;
}

export class ERootView extends React.Component {

    constructor(props) {
        super(props);

        // hint
        global.se.makeHint = options => this.makeHint(options);
        global.se.makeActivity = options => this.makeActivity(options);
        global.se.hiddenActivity = () => this.hiddenActivity();

        // alert 弹框
        global.se.alert = options => this.alert(options);

        // alert sheet
        global.se.alertSheet = options => this.alertSheet(options);

        // 日期选择
        global.se.pickDate = options => {
            if (Platform.OS === 'ios') {
                this.pickDate(options);
            } else {
                throw 'Platform ' + Platform.OS + 'has not implement this method'
            }
        };

        // 选择器
        global.se.pick = options => this.pick(options);

        // 图片预览
        global.se.previewImage = options => this.previewImage(options);

        this.state = {
            previewImage: {
                images: [],
                visible: false,
            }
        };
    }

    render() {
        return (
            <View style={{ backgroundColor: 'white', flex: 1, alignSelf: 'stretch' }}>
                {this.props.children}
                {this.hintView()}
                {this.alertSheetView()}
                {this.alertView()}
                {this.datePickerView()}
                {this.pickerView()}
                <EPreviewImage
                    onCancel={()=>this.setState({previewImage: {visible: false}})}
                    visible={this.state.previewImage.visible}
                    imageItems={this.state.previewImage.images}/>
            </View>
        )
    }

    previewImage(options: EPreviewImageOptions) {
        // ios 原生可以处理本地沙盒图片和远端图片
        if (isIOS) {
            previewImage(options)
        } else {
            this.setState({
                previewImage: {...options, visible: true}
            })
        }
    }
}