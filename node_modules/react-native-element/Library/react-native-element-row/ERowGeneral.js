/**
 * Created on 14:11 2019/03/12.
 * file name EGeneralRow
 * by wangtieshan
 */

import React from 'react';

import {
    View,
    ColorPropType,
    StyleSheet,
    Text
} from 'react-native';

import { EButton } from '../react-native-element-core/EButton';

import { ESlot } from '../react-native-element-core/ESlot';

import { EImage } from '../react-native-element-core/EImage';

import { ETheme } from '../react-native-element-core/theme';

import { ESep } from '../react-native-element-core/ESep';

import PropTypes from 'prop-types';

/**
 * 通用行控件
 * 横向布局，上下居中，从左向右元素依次是
 * SideNode(slot='side')边缘节点，只能自定义节点。
 * IconNode(slot='icon')头像节点，默认图片节点。但是允许自定义为其他元素节点。例如：图标
 * TitleNode 文本节点，只能文本节点，不支持子节点自定义。例如：标题
 * ValueNode(slot='value') 默认文本节点。例如：副标题
 * CustomNode(slot='custom') 自定义节点。例如：箭头
 * 【说明】所有的控件布局优先考虑左边距，尽量不设置右边距。默认的左右边距从 ETheme.css.row.sideDistance
 * 【说明】不建议直接使用此组件
 */
export class ERowGeneral extends React.Component {

    static propTypes = {

        /**
         * 整行点击
         */
        onPress: PropTypes.func,

        /**
         * 高度 ETheme.css.row.height
         */
        height: PropTypes.number,

        /**
         * 内容布局
         */
        containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),

        /**
         * icon
         */
        icon: PropTypes.any,

        /**
         * icon style
         */
        iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),

        /**
         * title
         */
        title: PropTypes.string,
        /**
         * title's style
         */
        titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),

        /**
         * value
         */
        value: PropTypes.string,

        /**
         * value's style
         */
        valueStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),

        /**
         * value's placeholder
         */
        placeholder: PropTypes.string,

        /**
         * value placeholder's style
         */
        placeHolderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),

        /**
         * opacity for mask view
         */
        maskOpacity: PropTypes.number,

        /**
         * 是否可见
         */
        visible: PropTypes.bool,

        /**
         * 禁止点击手势
         */
        disabledTouch: PropTypes.bool,

        /**
         * separator
         */
        separatorStyle: PropTypes.shape({ ...ESep.propTypes })
    };

    static defaultProps = {
        visible: true,
        height: 44,
        maskOpacity: 0.1,
        iconStyle: {}
    };

    render() {
        return (
            <EButton
                disabledTouch={this.props.disabledTouch}
                maskOpacity={this.props.maskOpacity}
                onPress={()=> {this.props.onPress && this.props.onPress()}}
                borderConfig={{borderRadius: 0}}
                containerStyle={[styles.buttonContainerStyle, this.props.containerStyle]}
                style={[{ height: this.props.height, backgroundColor: 'white' }, this.props.style, this.props.visible ? {} : {display: 'none'} ]}>
                <ESlot name={'side'} superChildren={this.props.children}/>
                <ESlot name={'icon'} superChildren={this.props.children}>
                    {this.props.icon && <EImage source={this.props.icon} style={[styles.iconStyle, this.props.iconStyle]}/>}
                </ESlot>
                <Text style={[styles.titleStyle, this.props.titleStyle]}>{ this.props.title }</Text>
                <ESlot name={'value'} superChildren={this.props.children}>
                    <Text
                        style={this.props.value ?
                            [styles.valueStyle, this.props.valueStyle ] :
                            [styles.valuePlaceholderStyle, this.props.placeHolderStyle]}>
                        { this.props.value || this.props.placeholder }</Text>
                </ESlot>
                <ESlot name={'custom'} superChildren={this.props.children}/>
                <ESep {...this.props.separatorStyle}/>
            </EButton>
        );
    }
}

const styles = StyleSheet.create({
    titleStyle: {
        minWidth: 55,
        fontSize: ETheme.font.size.base,
        color: ETheme.color.color9b,
        marginLeft: ETheme.css.row.sideDistance
    },
    iconStyle: {
        width: 25,
        height: 25,
        overflow: 'hidden'
    },
    valueStyle: {
        textAlign: 'left',
        fontSize: ETheme.font.size.base,
        color: '#000000',
        flex: 1,
        marginLeft: 10
    },
    valuePlaceholderStyle: {
        textAlign: 'left',
        fontSize: ETheme.font.size.base,
        color: ETheme.color.placeholderTextColor,
        flex: 1,
        marginLeft: 10
    },
    buttonContainerStyle: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'flex-start'
    }
});