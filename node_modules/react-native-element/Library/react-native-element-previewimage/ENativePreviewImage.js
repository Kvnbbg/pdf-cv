/**
 * Created on 14:51 2019/03/18.
 * file name ENativePreviewImage
 * by wangtieshan
 */

import { Platform, NativeModules } from "react-native";

const NativePreviewImageManager = NativeModules.EPreviewImageViewManager;

/**
 * 图片预览对象
 */
export interface EPreviewImageItem {
    /**
     * 图片路径
     * 支持远端路径和本地沙盒全路径
     */
    path: string;
    /**
     * 预览的图片展示的标题
     */
    title: string;
    /**
     * 图片的唯一标识，删除时回调字段
     */
    uuid: string;
}

/**
 * 图片预览对象
 */
export interface EPreviewImageOptions {
    /**
     * 预览的图片列表
     */
    images: EPreviewImageItem[];
    /**
     * 当前展示的图片标识
     */
    current: string;
    /**
     * 删除时的回调
     */
    onDelete: ({ uuid: string }) => void;
}

/**
 * 预览图片
 * @param options 预览图片的配置
 */
export function previewImage(options: EPreviewImageOptions) {
    if (!NativePreviewImageManager) {
        throw 'Current platform' + Platform.OS + "does't implement this method"
    }
    if (!options || !options.images || !options.images.hasOwnProperty('length') || !options.images.length) {
        return;
    }
    let result = [];
    let current = 0;
    for (let index = 0; index < options.images.length; index++) {
        const item = options.images[index];
        if (!item.uuid) { return; }
        if (options.current === item.uuid) {
            current = index;
        }
        result.push(item)
    }
    NativePreviewImageManager.preview({
        images: result,
        index: current
    })
}