//
//  EPreviewImageViewManager.m
//  onety
//
//  Created by 王铁山 on 2018/6/5.
//  Copyright © 2018年 smjr. All rights reserved.
//

#import "EPreviewImageViewManager.h"

#import <ReactNativeElement/ReactNativeElement-Swift.h>

#import <React/RCTUtils.h>

#ifndef CheckObj
#define CheckObj(dic)\
if (!dic) {\
return;\
}
#endif

#ifndef CheckDic
#define CheckDic(dic)\
if (![dic isKindOfClass:[NSDictionary class]]) {\
return;\
}
#endif

#ifndef CheckKey
#define CheckKey(dic, key)\
if (!dic[key]) {\
return;\
}
#endif

@implementation EPreviewImageViewManager

RCT_EXPORT_MODULE();

/**
 * images: {title, path}
 */
RCT_EXPORT_METHOD(preview: (NSDictionary *)options) {
    RCTExecuteOnMainQueue(^{
        [self _preview:options deleteCallBack: nil];
    });
}

/**
 * images: {title, path}
 */
RCT_EXPORT_METHOD(previewWithDelete: (NSDictionary *)options deleteCallBack: (RCTResponseSenderBlock)callback) {
    RCTUnsafeExecuteOnMainQueueSync(^{
        [self _preview:options deleteCallBack: callback];
    });
}


- (void)_preview: (NSDictionary *)options deleteCallBack: (RCTResponseSenderBlock)deleteCallBack {
    
    CheckObj(options)
    
    CheckDic(options)
    
    CheckKey(options, @"images")
    
    NSArray * images = options[@"images"];
    
    if (!images.count) return;
    
    NSMutableArray * result = [NSMutableArray array];
    
    for (NSDictionary * image in images) {
        CheckDic(image)
        EPreViewImageModel * model;
        NSString * path = image[@"path"];
        if (!path) {
            model = [[EPreViewImageModel alloc] init];
        } else {
            if ([path hasPrefix:@"http"]) {
                model = [[EPreViewImageModel alloc] initWithPath:path];
            } else {
                model = [[EPreViewImageModel alloc] initWithLocalPath:path];
            }
        }
        model.title = image[@"title"];
        model.uuid = image[@"uuid"];
        [result addObject: model];
    }
    
    int index = 0;
    
    if ([options.allKeys containsObject:@"index"]) {
        index = [options[@"index"] intValue];
    }
    
    EPreViewImageController * vc = [[EPreViewImageController alloc] initWithModels:result needDelete:false initIndex:index];
    
    if (deleteCallBack) {
        [vc setDeleteBlock:^(NSString * _Nullable uuid) {
            deleteCallBack(@[[NSNull null], uuid ? uuid : [NSNull null]]);
        }];
    }
    
    [RCTPresentedViewController() presentViewController:vc animated:true completion:nil];
}

@end
