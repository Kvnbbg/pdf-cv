{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar supportsFullscreenAPI = function supportsFullscreenAPI(element) {\n  return 'requestFullscreen' in element;\n};\nvar supportsWebkitFullscreenAPI = function supportsWebkitFullscreenAPI(element) {\n  return 'webkitEnterFullScreen' in element;\n};\nvar supportsMsFullscreenAPI = function supportsMsFullscreenAPI(element) {\n  return 'msRequestFullscreen' in element;\n};\nvar supportsWebkitFullscreenChangeEvent = function supportsWebkitFullscreenChangeEvent() {\n  return supportsEvent('video', 'webkitfullscreenchange');\n};\nfunction addEventListener(element, eventName, listener) {\n  element.addEventListener(eventName, listener);\n  return function () {\n    return element.removeEventListener(eventName, listener);\n  };\n}\nvar supportsEvent = function supportsEvent(elementName, eventName) {\n  var element = document.createElement(elementName);\n  element.setAttribute('on' + eventName, 'return;');\n  return typeof element['on' + eventName] === 'function';\n};\nexport function requestFullscreen(_x) {\n  return _requestFullscreen.apply(this, arguments);\n}\nfunction _requestFullscreen() {\n  _requestFullscreen = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(element) {\n    var _element$webkitEnterF, _element$msRequestFul;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!supportsFullscreenAPI(element)) {\n            _context.next = 4;\n            break;\n          }\n          return _context.abrupt(\"return\", element.requestFullscreen());\n        case 4:\n          if (!supportsWebkitFullscreenAPI(element)) {\n            _context.next = 8;\n            break;\n          }\n          (_element$webkitEnterF = element['webkitEnterFullScreen']) == null ? void 0 : _element$webkitEnterF.call(element);\n          _context.next = 13;\n          break;\n        case 8:\n          if (!supportsMsFullscreenAPI(element)) {\n            _context.next = 12;\n            break;\n          }\n          (_element$msRequestFul = element['msRequestFullscreen']) == null ? void 0 : _element$msRequestFul.call(element);\n          _context.next = 13;\n          break;\n        case 12:\n          throw new Error('Fullscreen not supported');\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _requestFullscreen.apply(this, arguments);\n}\nexport function exitFullscreen(_x2) {\n  return _exitFullscreen.apply(this, arguments);\n}\nfunction _exitFullscreen() {\n  _exitFullscreen = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(element) {\n    var _element$webkitExitFu, _document$msExitFulls, _document;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!supportsFullscreenAPI(element)) {\n            _context2.next = 4;\n            break;\n          }\n          return _context2.abrupt(\"return\", document.exitFullscreen());\n        case 4:\n          if (!supportsWebkitFullscreenAPI(element)) {\n            _context2.next = 8;\n            break;\n          }\n          (_element$webkitExitFu = element['webkitExitFullScreen']) == null ? void 0 : _element$webkitExitFu.call(element);\n          _context2.next = 13;\n          break;\n        case 8:\n          if (!supportsMsFullscreenAPI(element)) {\n            _context2.next = 12;\n            break;\n          }\n          (_document$msExitFulls = (_document = document)['msExitFullscreen']) == null ? void 0 : _document$msExitFulls.call(_document);\n          _context2.next = 13;\n          break;\n        case 12:\n          throw new Error('Fullscreen not supported');\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _exitFullscreen.apply(this, arguments);\n}\nexport function addFullscreenListener(element, callback) {\n  if (supportsFullscreenAPI(element)) {\n    return addEventListener(element, 'fullscreenchange', function (event) {\n      return callback(document.fullscreenElement === event.target);\n    });\n  } else if (supportsWebkitFullscreenAPI(element) && supportsWebkitFullscreenChangeEvent()) {\n    return addEventListener(element, 'webkitfullscreenchange', function (event) {\n      return callback(document['webkitFullscreenElement'] === event.target);\n    });\n  } else if (supportsWebkitFullscreenAPI(element)) {\n    var removeBeginListener = addEventListener(element, 'webkitbeginfullscreen', function () {\n      return callback(true);\n    });\n    var removeEndListener = addEventListener(element, 'webkitendfullscreen', function () {\n      return callback(false);\n    });\n    return function () {\n      removeBeginListener();\n      removeEndListener();\n    };\n  } else if (supportsMsFullscreenAPI(element)) {\n    return addEventListener(document, 'MSFullscreenChange', function (event) {\n      return callback(document['msFullscreenElement'] === event.target);\n    });\n  } else {\n    return function () {};\n  }\n}","map":{"version":3,"names":["supportsFullscreenAPI","element","supportsWebkitFullscreenAPI","supportsMsFullscreenAPI","supportsWebkitFullscreenChangeEvent","supportsEvent","addEventListener","eventName","listener","removeEventListener","elementName","document","createElement","setAttribute","requestFullscreen","_x","_requestFullscreen","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_element$webkitEnterF","_element$msRequestFul","wrap","_callee$","_context","prev","next","abrupt","call","Error","stop","exitFullscreen","_x2","_exitFullscreen","_callee2","_element$webkitExitFu","_document$msExitFulls","_document","_callee2$","_context2","addFullscreenListener","callback","event","fullscreenElement","target","removeBeginListener","removeEndListener"],"sources":["/home/kevin/Documents/Github/pdf-cv/node_modules/expo-av/src/FullscreenUtils.web.ts"],"sourcesContent":["/**\n * Detect if the browser supports the standard fullscreen API on the given\n * element:\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\n */\nconst supportsFullscreenAPI = (element: HTMLMediaElement): boolean =>\n  'requestFullscreen' in element;\n\n/**\n * Detect if the browser supports the non-standard webkit fullscreen API on the\n * given element (looking at you, Safari).\n */\nconst supportsWebkitFullscreenAPI = (element: HTMLMediaElement): boolean =>\n  'webkitEnterFullScreen' in element;\n\n/**\n * Detect if the browser supports the non-standard ms fullscreen API on the\n * given element (looking at you, IE11).\n */\nconst supportsMsFullscreenAPI = (element: HTMLMediaElement): boolean =>\n  'msRequestFullscreen' in element;\n\n/**\n * Detect if the browser supports the `webkitFullscreenChange` event. This is\n * a non-standard event added to Safari on macOS by Apple:\n * https://developer.apple.com/documentation/webkitjs/document/1631998-onwebkitfullscreenchange\n */\nconst supportsWebkitFullscreenChangeEvent = (): boolean =>\n  supportsEvent('video', 'webkitfullscreenchange');\n\n/**\n * A helper that adds an event listener to an element. The key value-add over\n * the native addEventListener is that it returns a function that will remove\n * the event listener. This allows the setup and teardown logic for a listener\n * to be easily colocated.\n */\nfunction addEventListener(\n  element: Document | HTMLElement,\n  eventName: string,\n  listener: EventListenerOrEventListenerObject\n): () => any {\n  element.addEventListener(eventName, listener);\n  return () => element.removeEventListener(eventName, listener);\n}\n\n/**\n * Detect if the browser supports an event on a particular element type.\n */\nconst supportsEvent = (elementName: string, eventName: string): boolean => {\n  // Detect if the browser supports the event by attempting to add a handler\n  // attribute for that event to the provided element. If the event is supported\n  // then the browser will accept the attribute and report the type of the\n  // attribute as \"function\". See: https://stackoverflow.com/a/4562426/2747759\n  const element = document.createElement(elementName);\n  element.setAttribute('on' + eventName, 'return;');\n  return typeof element['on' + eventName] === 'function';\n};\n\n/**\n * Switches a video element into fullscreen.\n */\nexport async function requestFullscreen(element: HTMLMediaElement): Promise<void> {\n  if (supportsFullscreenAPI(element)) {\n    return element.requestFullscreen();\n  } else if (supportsWebkitFullscreenAPI(element)) {\n    // This API is synchronous so no need to return the result\n    element['webkitEnterFullScreen']?.();\n  } else if (supportsMsFullscreenAPI(element)) {\n    // This API is synchronous so no need to return the result\n    element['msRequestFullscreen']?.();\n  } else {\n    throw new Error('Fullscreen not supported');\n  }\n}\n\n/**\n * Switches a video element out of fullscreen.\n */\n\nexport async function exitFullscreen(element: HTMLMediaElement): Promise<void> {\n  if (supportsFullscreenAPI(element)) {\n    return document.exitFullscreen();\n  } else if (supportsWebkitFullscreenAPI(element)) {\n    // This API is synchronous so no need to return the result\n    element['webkitExitFullScreen']?.();\n  } else if (supportsMsFullscreenAPI(element)) {\n    // This API is synchronous so no need to return the result\n    document['msExitFullscreen']?.();\n  } else {\n    throw new Error('Fullscreen not supported');\n  }\n}\n\n/**\n * Listens for fullscreen change events on a video element. The provided\n * callback will be called with `true` when the video is switched into\n * fullscreen and `false` when the video is switched out of fullscreen.\n */\nexport function addFullscreenListener(\n  element: HTMLVideoElement,\n  callback: (isFullscreen: boolean) => void\n): () => any {\n  if (supportsFullscreenAPI(element)) {\n    // Used by browsers that support the official spec\n    return addEventListener(element, 'fullscreenchange', (event) =>\n      callback(document.fullscreenElement === event.target)\n    );\n  } else if (supportsWebkitFullscreenAPI(element) && supportsWebkitFullscreenChangeEvent()) {\n    // Used by Safari on macOS\n    return addEventListener(element, 'webkitfullscreenchange', (event) =>\n      callback(document['webkitFullscreenElement'] === event.target)\n    );\n  } else if (supportsWebkitFullscreenAPI(element)) {\n    // Used by Safari on iOS\n    const removeBeginListener = addEventListener(element, 'webkitbeginfullscreen', () =>\n      callback(true)\n    );\n    const removeEndListener = addEventListener(element, 'webkitendfullscreen', () =>\n      callback(false)\n    );\n    return () => {\n      removeBeginListener();\n      removeEndListener();\n    };\n  } else if (supportsMsFullscreenAPI(element)) {\n    // Used by IE11\n    return addEventListener(document, 'MSFullscreenChange', (event) =>\n      callback(document['msFullscreenElement'] === event.target)\n    );\n  } else {\n    return () => {};\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}