{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _excluded = [\"uri\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { PermissionStatus, SyntheticPlatformEmitter } from 'expo-modules-core';\nimport { RecordingOptionsPresets } from './Audio/RecordingConstants';\nfunction getPermissionWithQueryAsync(_x) {\n  return _getPermissionWithQueryAsync.apply(this, arguments);\n}\nfunction _getPermissionWithQueryAsync() {\n  _getPermissionWithQueryAsync = _asyncToGenerator(_regeneratorRuntime.mark(function _callee21(name) {\n    var _yield$navigator$perm, state;\n    return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) switch (_context21.prev = _context21.next) {\n        case 0:\n          if (!(!navigator || !navigator.permissions || !navigator.permissions.query)) {\n            _context21.next = 2;\n            break;\n          }\n          return _context21.abrupt(\"return\", null);\n        case 2:\n          _context21.prev = 2;\n          _context21.next = 5;\n          return navigator.permissions.query({\n            name: name\n          });\n        case 5:\n          _yield$navigator$perm = _context21.sent;\n          state = _yield$navigator$perm.state;\n          _context21.t0 = state;\n          _context21.next = _context21.t0 === 'granted' ? 10 : _context21.t0 === 'denied' ? 11 : 12;\n          break;\n        case 10:\n          return _context21.abrupt(\"return\", PermissionStatus.GRANTED);\n        case 11:\n          return _context21.abrupt(\"return\", PermissionStatus.DENIED);\n        case 12:\n          return _context21.abrupt(\"return\", PermissionStatus.UNDETERMINED);\n        case 13:\n          _context21.next = 18;\n          break;\n        case 15:\n          _context21.prev = 15;\n          _context21.t1 = _context21[\"catch\"](2);\n          return _context21.abrupt(\"return\", PermissionStatus.UNDETERMINED);\n        case 18:\n        case \"end\":\n          return _context21.stop();\n      }\n    }, _callee21, null, [[2, 15]]);\n  }));\n  return _getPermissionWithQueryAsync.apply(this, arguments);\n}\nfunction getUserMedia(constraints) {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || function () {\n    var error = new Error('Permission unimplemented');\n    error.code = 0;\n    error.name = 'NotAllowedError';\n    throw error;\n  };\n  return new Promise(function (resolve, reject) {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\nfunction getStatusFromMedia(media) {\n  if (!media) {\n    return {\n      isLoaded: false,\n      error: undefined\n    };\n  }\n  var isPlaying = !!(media.currentTime > 0 && !media.paused && !media.ended && media.readyState > 2);\n  var status = {\n    isLoaded: true,\n    uri: media.src,\n    progressUpdateIntervalMillis: 100,\n    durationMillis: media.duration * 1000,\n    positionMillis: media.currentTime * 1000,\n    shouldPlay: media.autoplay,\n    isPlaying: isPlaying,\n    isBuffering: false,\n    rate: media.playbackRate,\n    shouldCorrectPitch: false,\n    volume: media.volume,\n    audioPan: 0,\n    isMuted: media.muted,\n    isLooping: media.loop,\n    didJustFinish: media.ended\n  };\n  return status;\n}\nfunction setStatusForMedia(_x2, _x3) {\n  return _setStatusForMedia.apply(this, arguments);\n}\nfunction _setStatusForMedia() {\n  _setStatusForMedia = _asyncToGenerator(_regeneratorRuntime.mark(function _callee22(media, status) {\n    return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) switch (_context22.prev = _context22.next) {\n        case 0:\n          if (status.positionMillis !== undefined) {\n            media.currentTime = status.positionMillis / 1000;\n          }\n          if (!(status.shouldPlay !== undefined)) {\n            _context22.next = 9;\n            break;\n          }\n          if (!status.shouldPlay) {\n            _context22.next = 7;\n            break;\n          }\n          _context22.next = 5;\n          return media.play();\n        case 5:\n          _context22.next = 9;\n          break;\n        case 7:\n          _context22.next = 9;\n          return media.pause();\n        case 9:\n          if (status.rate !== undefined) {\n            media.playbackRate = status.rate;\n          }\n          if (status.volume !== undefined) {\n            media.volume = status.volume;\n          }\n          if (status.isMuted !== undefined) {\n            media.muted = status.isMuted;\n          }\n          if (status.isLooping !== undefined) {\n            media.loop = status.isLooping;\n          }\n          return _context22.abrupt(\"return\", getStatusFromMedia(media));\n        case 14:\n        case \"end\":\n          return _context22.stop();\n      }\n    }, _callee22);\n  }));\n  return _setStatusForMedia.apply(this, arguments);\n}\nvar mediaRecorder = null;\nvar mediaRecorderUptimeOfLastStartResume = 0;\nvar mediaRecorderDurationAlreadyRecorded = 0;\nvar mediaRecorderIsRecording = false;\nfunction getAudioRecorderDurationMillis() {\n  var duration = mediaRecorderDurationAlreadyRecorded;\n  if (mediaRecorderIsRecording && mediaRecorderUptimeOfLastStartResume > 0) {\n    duration += Date.now() - mediaRecorderUptimeOfLastStartResume;\n  }\n  return duration;\n}\nexport default {\n  get name() {\n    return 'ExponentAV';\n  },\n  getStatusForVideo: function () {\n    var _getStatusForVideo = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(element) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    function getStatusForVideo(_x4) {\n      return _getStatusForVideo.apply(this, arguments);\n    }\n    return getStatusForVideo;\n  }(),\n  loadForVideo: function () {\n    var _loadForVideo = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(element, nativeSource, fullInitialStatus) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    function loadForVideo(_x5, _x6, _x7) {\n      return _loadForVideo.apply(this, arguments);\n    }\n    return loadForVideo;\n  }(),\n  unloadForVideo: function () {\n    var _unloadForVideo = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(element) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    function unloadForVideo(_x8) {\n      return _unloadForVideo.apply(this, arguments);\n    }\n    return unloadForVideo;\n  }(),\n  setStatusForVideo: function () {\n    var _setStatusForVideo = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(element, status) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    function setStatusForVideo(_x9, _x10) {\n      return _setStatusForVideo.apply(this, arguments);\n    }\n    return setStatusForVideo;\n  }(),\n  replayVideo: function () {\n    var _replayVideo = _asyncToGenerator(_regeneratorRuntime.mark(function _callee5(element, status) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    function replayVideo(_x11, _x12) {\n      return _replayVideo.apply(this, arguments);\n    }\n    return replayVideo;\n  }(),\n  setAudioMode: function () {\n    var _setAudioMode = _asyncToGenerator(_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    function setAudioMode() {\n      return _setAudioMode.apply(this, arguments);\n    }\n    return setAudioMode;\n  }(),\n  setAudioIsEnabled: function () {\n    var _setAudioIsEnabled = _asyncToGenerator(_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }));\n    function setAudioIsEnabled() {\n      return _setAudioIsEnabled.apply(this, arguments);\n    }\n    return setAudioIsEnabled;\n  }(),\n  getStatusForSound: function () {\n    var _getStatusForSound = _asyncToGenerator(_regeneratorRuntime.mark(function _callee8(element) {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n    function getStatusForSound(_x13) {\n      return _getStatusForSound.apply(this, arguments);\n    }\n    return getStatusForSound;\n  }(),\n  loadForSound: function () {\n    var _loadForSound = _asyncToGenerator(_regeneratorRuntime.mark(function _callee9(nativeSource, fullInitialStatus) {\n      var source, media, status;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            source = typeof nativeSource === 'string' ? nativeSource : nativeSource.uri;\n            media = new Audio(source);\n            media.ontimeupdate = function () {\n              SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus', {\n                key: media,\n                status: getStatusFromMedia(media)\n              });\n            };\n            media.onerror = function () {\n              SyntheticPlatformEmitter.emit('ExponentAV.onError', {\n                key: media,\n                error: media.error.message\n              });\n            };\n            _context9.next = 6;\n            return setStatusForMedia(media, fullInitialStatus);\n          case 6:\n            status = _context9.sent;\n            return _context9.abrupt(\"return\", [media, status]);\n          case 8:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9);\n    }));\n    function loadForSound(_x14, _x15) {\n      return _loadForSound.apply(this, arguments);\n    }\n    return loadForSound;\n  }(),\n  unloadForSound: function () {\n    var _unloadForSound = _asyncToGenerator(_regeneratorRuntime.mark(function _callee10(element) {\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            element.pause();\n            element.removeAttribute('src');\n            element.load();\n            return _context10.abrupt(\"return\", getStatusFromMedia(element));\n          case 4:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10);\n    }));\n    function unloadForSound(_x16) {\n      return _unloadForSound.apply(this, arguments);\n    }\n    return unloadForSound;\n  }(),\n  setStatusForSound: function () {\n    var _setStatusForSound = _asyncToGenerator(_regeneratorRuntime.mark(function _callee11(element, status) {\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            return _context11.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, _callee11);\n    }));\n    function setStatusForSound(_x17, _x18) {\n      return _setStatusForSound.apply(this, arguments);\n    }\n    return setStatusForSound;\n  }(),\n  replaySound: function () {\n    var _replaySound = _asyncToGenerator(_regeneratorRuntime.mark(function _callee12(element, status) {\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) switch (_context12.prev = _context12.next) {\n          case 0:\n            return _context12.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context12.stop();\n        }\n      }, _callee12);\n    }));\n    function replaySound(_x19, _x20) {\n      return _replaySound.apply(this, arguments);\n    }\n    return replaySound;\n  }(),\n  getAudioRecordingStatus: function () {\n    var _getAudioRecordingStatus = _asyncToGenerator(_regeneratorRuntime.mark(function _callee13() {\n      var _mediaRecorder, _mediaRecorder2, _mediaRecorder3;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n            return _context13.abrupt(\"return\", {\n              canRecord: ((_mediaRecorder = mediaRecorder) == null ? void 0 : _mediaRecorder.state) === 'recording' || ((_mediaRecorder2 = mediaRecorder) == null ? void 0 : _mediaRecorder2.state) === 'inactive',\n              isRecording: ((_mediaRecorder3 = mediaRecorder) == null ? void 0 : _mediaRecorder3.state) === 'recording',\n              isDoneRecording: false,\n              durationMillis: getAudioRecorderDurationMillis(),\n              uri: null\n            });\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, _callee13);\n    }));\n    function getAudioRecordingStatus() {\n      return _getAudioRecordingStatus.apply(this, arguments);\n    }\n    return getAudioRecordingStatus;\n  }(),\n  prepareAudioRecorder: function () {\n    var _prepareAudioRecorder = _asyncToGenerator(_regeneratorRuntime.mark(function _callee14(options) {\n      var stream, _yield$this$getAudioR, uri, status;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) switch (_context14.prev = _context14.next) {\n          case 0:\n            if (!(typeof navigator !== 'undefined' && !navigator.mediaDevices)) {\n              _context14.next = 2;\n              break;\n            }\n            throw new Error('No media devices available');\n          case 2:\n            mediaRecorderUptimeOfLastStartResume = 0;\n            mediaRecorderDurationAlreadyRecorded = 0;\n            _context14.next = 6;\n            return getUserMedia({\n              audio: true\n            });\n          case 6:\n            stream = _context14.sent;\n            mediaRecorder = new window.MediaRecorder(stream, (options == null ? void 0 : options.web) || RecordingOptionsPresets.HIGH_QUALITY.web);\n            mediaRecorder.addEventListener('pause', function () {\n              mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n              mediaRecorderIsRecording = false;\n            });\n            mediaRecorder.addEventListener('resume', function () {\n              mediaRecorderUptimeOfLastStartResume = Date.now();\n              mediaRecorderIsRecording = true;\n            });\n            mediaRecorder.addEventListener('start', function () {\n              mediaRecorderUptimeOfLastStartResume = Date.now();\n              mediaRecorderDurationAlreadyRecorded = 0;\n              mediaRecorderIsRecording = true;\n            });\n            mediaRecorder.addEventListener('stop', function () {\n              mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n              mediaRecorderIsRecording = false;\n              stream.getTracks().forEach(function (track) {\n                return track.stop();\n              });\n            });\n            _context14.next = 14;\n            return this.getAudioRecordingStatus();\n          case 14:\n            _yield$this$getAudioR = _context14.sent;\n            uri = _yield$this$getAudioR.uri;\n            status = _objectWithoutProperties(_yield$this$getAudioR, _excluded);\n            return _context14.abrupt(\"return\", {\n              uri: null,\n              status: status\n            });\n          case 18:\n          case \"end\":\n            return _context14.stop();\n        }\n      }, _callee14, this);\n    }));\n    function prepareAudioRecorder(_x21) {\n      return _prepareAudioRecorder.apply(this, arguments);\n    }\n    return prepareAudioRecorder;\n  }(),\n  startAudioRecording: function () {\n    var _startAudioRecording = _asyncToGenerator(_regeneratorRuntime.mark(function _callee15() {\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) switch (_context15.prev = _context15.next) {\n          case 0:\n            if (!(mediaRecorder === null)) {\n              _context15.next = 2;\n              break;\n            }\n            throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');\n          case 2:\n            if (mediaRecorder.state === 'paused') {\n              mediaRecorder.resume();\n            } else {\n              mediaRecorder.start();\n            }\n            return _context15.abrupt(\"return\", this.getAudioRecordingStatus());\n          case 4:\n          case \"end\":\n            return _context15.stop();\n        }\n      }, _callee15, this);\n    }));\n    function startAudioRecording() {\n      return _startAudioRecording.apply(this, arguments);\n    }\n    return startAudioRecording;\n  }(),\n  pauseAudioRecording: function () {\n    var _pauseAudioRecording = _asyncToGenerator(_regeneratorRuntime.mark(function _callee16() {\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) switch (_context16.prev = _context16.next) {\n          case 0:\n            if (!(mediaRecorder === null)) {\n              _context16.next = 2;\n              break;\n            }\n            throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');\n          case 2:\n            mediaRecorder.pause();\n            return _context16.abrupt(\"return\", this.getAudioRecordingStatus());\n          case 4:\n          case \"end\":\n            return _context16.stop();\n        }\n      }, _callee16, this);\n    }));\n    function pauseAudioRecording() {\n      return _pauseAudioRecording.apply(this, arguments);\n    }\n    return pauseAudioRecording;\n  }(),\n  stopAudioRecording: function () {\n    var _stopAudioRecording = _asyncToGenerator(_regeneratorRuntime.mark(function _callee17() {\n      var dataPromise, data, url;\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) switch (_context17.prev = _context17.next) {\n          case 0:\n            if (!(mediaRecorder === null)) {\n              _context17.next = 2;\n              break;\n            }\n            throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');\n          case 2:\n            if (!(mediaRecorder.state === 'inactive')) {\n              _context17.next = 4;\n              break;\n            }\n            return _context17.abrupt(\"return\", this.getAudioRecordingStatus());\n          case 4:\n            dataPromise = new Promise(function (resolve) {\n              return mediaRecorder.addEventListener('dataavailable', function (e) {\n                return resolve(e.data);\n              });\n            });\n            mediaRecorder.stop();\n            _context17.next = 8;\n            return dataPromise;\n          case 8:\n            data = _context17.sent;\n            url = URL.createObjectURL(data);\n            _context17.t0 = _objectSpread;\n            _context17.t1 = _objectSpread;\n            _context17.t2 = {};\n            _context17.next = 15;\n            return this.getAudioRecordingStatus();\n          case 15:\n            _context17.t3 = _context17.sent;\n            _context17.t4 = (0, _context17.t1)(_context17.t2, _context17.t3);\n            _context17.t5 = {};\n            _context17.t6 = {\n              uri: url\n            };\n            return _context17.abrupt(\"return\", (0, _context17.t0)(_context17.t4, _context17.t5, _context17.t6));\n          case 20:\n          case \"end\":\n            return _context17.stop();\n        }\n      }, _callee17, this);\n    }));\n    function stopAudioRecording() {\n      return _stopAudioRecording.apply(this, arguments);\n    }\n    return stopAudioRecording;\n  }(),\n  unloadAudioRecorder: function () {\n    var _unloadAudioRecorder = _asyncToGenerator(_regeneratorRuntime.mark(function _callee18() {\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) switch (_context18.prev = _context18.next) {\n          case 0:\n            mediaRecorder = null;\n          case 1:\n          case \"end\":\n            return _context18.stop();\n        }\n      }, _callee18);\n    }));\n    function unloadAudioRecorder() {\n      return _unloadAudioRecorder.apply(this, arguments);\n    }\n    return unloadAudioRecorder;\n  }(),\n  getPermissionsAsync: function () {\n    var _getPermissionsAsync = _asyncToGenerator(_regeneratorRuntime.mark(function _callee19() {\n      var maybeStatus;\n      return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return getPermissionWithQueryAsync('microphone');\n          case 2:\n            maybeStatus = _context19.sent;\n            _context19.t0 = maybeStatus;\n            _context19.next = _context19.t0 === PermissionStatus.GRANTED ? 6 : _context19.t0 === PermissionStatus.DENIED ? 7 : 8;\n            break;\n          case 6:\n            return _context19.abrupt(\"return\", {\n              status: PermissionStatus.GRANTED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: true\n            });\n          case 7:\n            return _context19.abrupt(\"return\", {\n              status: PermissionStatus.DENIED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: false\n            });\n          case 8:\n            _context19.next = 10;\n            return this.requestPermissionsAsync();\n          case 10:\n            return _context19.abrupt(\"return\", _context19.sent);\n          case 11:\n          case \"end\":\n            return _context19.stop();\n        }\n      }, _callee19, this);\n    }));\n    function getPermissionsAsync() {\n      return _getPermissionsAsync.apply(this, arguments);\n    }\n    return getPermissionsAsync;\n  }(),\n  requestPermissionsAsync: function () {\n    var _requestPermissionsAsync = _asyncToGenerator(_regeneratorRuntime.mark(function _callee20() {\n      var stream;\n      return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.prev = 0;\n            _context20.next = 3;\n            return getUserMedia({\n              audio: true\n            });\n          case 3:\n            stream = _context20.sent;\n            stream.getTracks().forEach(function (track) {\n              return track.stop();\n            });\n            return _context20.abrupt(\"return\", {\n              status: PermissionStatus.GRANTED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: true\n            });\n          case 8:\n            _context20.prev = 8;\n            _context20.t0 = _context20[\"catch\"](0);\n            return _context20.abrupt(\"return\", {\n              status: PermissionStatus.DENIED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: false\n            });\n          case 11:\n          case \"end\":\n            return _context20.stop();\n        }\n      }, _callee20, null, [[0, 8]]);\n    }));\n    function requestPermissionsAsync() {\n      return _requestPermissionsAsync.apply(this, arguments);\n    }\n    return requestPermissionsAsync;\n  }()\n};","map":{"version":3,"names":["PermissionStatus","SyntheticPlatformEmitter","RecordingOptionsPresets","getPermissionWithQueryAsync","_x","_getPermissionWithQueryAsync","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee21","name","_yield$navigator$perm","state","wrap","_callee21$","_context21","prev","next","navigator","permissions","query","abrupt","sent","t0","GRANTED","DENIED","UNDETERMINED","t1","stop","getUserMedia","constraints","mediaDevices","webkitGetUserMedia","mozGetUserMedia","error","Error","code","Promise","resolve","reject","call","getStatusFromMedia","media","isLoaded","undefined","isPlaying","currentTime","paused","ended","readyState","status","uri","src","progressUpdateIntervalMillis","durationMillis","duration","positionMillis","shouldPlay","autoplay","isBuffering","rate","playbackRate","shouldCorrectPitch","volume","audioPan","isMuted","muted","isLooping","loop","didJustFinish","setStatusForMedia","_x2","_x3","_setStatusForMedia","_callee22","_callee22$","_context22","play","pause","mediaRecorder","mediaRecorderUptimeOfLastStartResume","mediaRecorderDurationAlreadyRecorded","mediaRecorderIsRecording","getAudioRecorderDurationMillis","Date","now","getStatusForVideo","_getStatusForVideo","_callee","element","_callee$","_context","_x4","loadForVideo","_loadForVideo","_callee2","nativeSource","fullInitialStatus","_callee2$","_context2","_x5","_x6","_x7","unloadForVideo","_unloadForVideo","_callee3","_callee3$","_context3","_x8","setStatusForVideo","_setStatusForVideo","_callee4","_callee4$","_context4","_x9","_x10","replayVideo","_replayVideo","_callee5","_callee5$","_context5","_x11","_x12","setAudioMode","_setAudioMode","_callee6","_callee6$","_context6","setAudioIsEnabled","_setAudioIsEnabled","_callee7","_callee7$","_context7","getStatusForSound","_getStatusForSound","_callee8","_callee8$","_context8","_x13","loadForSound","_loadForSound","_callee9","source","_callee9$","_context9","Audio","ontimeupdate","emit","key","onerror","message","_x14","_x15","unloadForSound","_unloadForSound","_callee10","_callee10$","_context10","removeAttribute","load","_x16","setStatusForSound","_setStatusForSound","_callee11","_callee11$","_context11","_x17","_x18","replaySound","_replaySound","_callee12","_callee12$","_context12","_x19","_x20","getAudioRecordingStatus","_getAudioRecordingStatus","_callee13","_mediaRecorder","_mediaRecorder2","_mediaRecorder3","_callee13$","_context13","canRecord","isRecording","isDoneRecording","prepareAudioRecorder","_prepareAudioRecorder","_callee14","options","stream","_yield$this$getAudioR","_callee14$","_context14","audio","window","MediaRecorder","web","HIGH_QUALITY","addEventListener","getTracks","forEach","track","_objectWithoutProperties","_excluded","_x21","startAudioRecording","_startAudioRecording","_callee15","_callee15$","_context15","resume","start","pauseAudioRecording","_pauseAudioRecording","_callee16","_callee16$","_context16","stopAudioRecording","_stopAudioRecording","_callee17","dataPromise","data","url","_callee17$","_context17","e","URL","createObjectURL","_objectSpread","t2","t3","t4","t5","t6","unloadAudioRecorder","_unloadAudioRecorder","_callee18","_callee18$","_context18","getPermissionsAsync","_getPermissionsAsync","_callee19","maybeStatus","_callee19$","_context19","expires","canAskAgain","granted","requestPermissionsAsync","_requestPermissionsAsync","_callee20","_callee20$","_context20"],"sources":["/home/kevin/Documents/Github/pdf-cv/node_modules/expo-av/src/ExponentAV.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, SyntheticPlatformEmitter } from 'expo-modules-core';\n\nimport type { AVPlaybackNativeSource, AVPlaybackStatus, AVPlaybackStatusToSet } from './AV.types';\nimport type { RecordingStatus } from './Audio/Recording.types';\nimport { RecordingOptionsPresets } from './Audio/RecordingConstants';\n\nasync function getPermissionWithQueryAsync(\n  name: PermissionNameWithAdditionalValues\n): Promise<PermissionStatus | null> {\n  if (!navigator || !navigator.permissions || !navigator.permissions.query) return null;\n\n  try {\n    const { state } = await navigator.permissions.query({ name });\n    switch (state) {\n      case 'granted':\n        return PermissionStatus.GRANTED;\n      case 'denied':\n        return PermissionStatus.DENIED;\n      default:\n        return PermissionStatus.UNDETERMINED;\n    }\n  } catch {\n    // Firefox - TypeError: 'microphone' (value of 'name' member of PermissionDescriptor) is not a valid value for enumeration PermissionName.\n    return PermissionStatus.UNDETERMINED;\n  }\n}\n\nfunction getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n\n  // First get ahold of the legacy getUserMedia, if present\n  const getUserMedia =\n    // TODO: this method is deprecated, migrate to https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    function () {\n      const error: any = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nfunction getStatusFromMedia(media?: HTMLMediaElement): AVPlaybackStatus {\n  if (!media) {\n    return {\n      isLoaded: false,\n      error: undefined,\n    };\n  }\n\n  const isPlaying = !!(\n    media.currentTime > 0 &&\n    !media.paused &&\n    !media.ended &&\n    media.readyState > 2\n  );\n\n  const status: AVPlaybackStatus = {\n    isLoaded: true,\n    uri: media.src,\n    progressUpdateIntervalMillis: 100, //TODO: Bacon: Add interval between calls\n    durationMillis: media.duration * 1000,\n    positionMillis: media.currentTime * 1000,\n    // playableDurationMillis: media.buffered * 1000,\n    // seekMillisToleranceBefore?: number\n    // seekMillisToleranceAfter?: number\n    shouldPlay: media.autoplay,\n    isPlaying,\n    isBuffering: false, //media.waiting,\n    rate: media.playbackRate,\n    // TODO: Bacon: This seems too complicated right now: https://webaudio.github.io/web-audio-api/#dom-biquadfilternode-frequency\n    shouldCorrectPitch: false,\n    volume: media.volume,\n    audioPan: 0,\n    isMuted: media.muted,\n    isLooping: media.loop,\n    didJustFinish: media.ended,\n  };\n\n  return status;\n}\n\nasync function setStatusForMedia(\n  media: HTMLMediaElement,\n  status: AVPlaybackStatusToSet\n): Promise<AVPlaybackStatus> {\n  if (status.positionMillis !== undefined) {\n    media.currentTime = status.positionMillis / 1000;\n  }\n  // if (status.progressUpdateIntervalMillis !== undefined) {\n  //   media.progressUpdateIntervalMillis = status.progressUpdateIntervalMillis;\n  // }\n  // if (status.seekMillisToleranceBefore !== undefined) {\n  //   media.seekMillisToleranceBefore = status.seekMillisToleranceBefore;\n  // }\n  // if (status.seekMillisToleranceAfter !== undefined) {\n  //   media.seekMillisToleranceAfter = status.seekMillisToleranceAfter;\n  // }\n  // if (status.shouldCorrectPitch !== undefined) {\n  //   media.shouldCorrectPitch = status.shouldCorrectPitch;\n  // }\n  if (status.shouldPlay !== undefined) {\n    if (status.shouldPlay) {\n      await media.play();\n    } else {\n      await media.pause();\n    }\n  }\n  if (status.rate !== undefined) {\n    media.playbackRate = status.rate;\n  }\n  if (status.volume !== undefined) {\n    media.volume = status.volume;\n  }\n  if (status.isMuted !== undefined) {\n    media.muted = status.isMuted;\n  }\n  if (status.isLooping !== undefined) {\n    media.loop = status.isLooping;\n  }\n\n  return getStatusFromMedia(media);\n}\n\nlet mediaRecorder: null | any /*MediaRecorder*/ = null;\nlet mediaRecorderUptimeOfLastStartResume: number = 0;\nlet mediaRecorderDurationAlreadyRecorded: number = 0;\nlet mediaRecorderIsRecording: boolean = false;\n\nfunction getAudioRecorderDurationMillis() {\n  let duration = mediaRecorderDurationAlreadyRecorded;\n  if (mediaRecorderIsRecording && mediaRecorderUptimeOfLastStartResume > 0) {\n    duration += Date.now() - mediaRecorderUptimeOfLastStartResume;\n  }\n  return duration;\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentAV';\n  },\n  async getStatusForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async loadForVideo(\n    element: HTMLMediaElement,\n    nativeSource: AVPlaybackNativeSource,\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async unloadForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async setStatusForVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replayVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  /* Audio */\n  async setAudioMode() {},\n  async setAudioIsEnabled() {},\n  async getStatusForSound(element: HTMLMediaElement) {\n    return getStatusFromMedia(element);\n  },\n  async loadForSound(\n    nativeSource: string | { uri: string; [key: string]: any },\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<[HTMLMediaElement, AVPlaybackStatus]> {\n    const source = typeof nativeSource === 'string' ? nativeSource : nativeSource.uri;\n    const media = new Audio(source);\n\n    media.ontimeupdate = () => {\n      SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus', {\n        key: media,\n        status: getStatusFromMedia(media),\n      });\n    };\n\n    media.onerror = () => {\n      SyntheticPlatformEmitter.emit('ExponentAV.onError', {\n        key: media,\n        error: media.error!.message,\n      });\n    };\n\n    const status = await setStatusForMedia(media, fullInitialStatus);\n\n    return [media, status];\n  },\n  async unloadForSound(element: HTMLMediaElement) {\n    element.pause();\n    element.removeAttribute('src');\n    element.load();\n    return getStatusFromMedia(element);\n  },\n  async setStatusForSound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replaySound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n\n  /* Recording */\n  //   async setUnloadedCallbackForAndroidRecording() {},\n  async getAudioRecordingStatus(): Promise<RecordingStatus> {\n    return {\n      canRecord: mediaRecorder?.state === 'recording' || mediaRecorder?.state === 'inactive',\n      isRecording: mediaRecorder?.state === 'recording',\n      isDoneRecording: false,\n      durationMillis: getAudioRecorderDurationMillis(),\n      uri: null,\n    };\n  },\n  async prepareAudioRecorder(options): Promise<{\n    uri: string | null;\n    // status is of type RecordingStatus, but without the canRecord field populated\n    status: Pick<RecordingStatus, Exclude<keyof RecordingStatus, 'canRecord'>>;\n  }> {\n    if (typeof navigator !== 'undefined' && !navigator.mediaDevices) {\n      throw new Error('No media devices available');\n    }\n\n    mediaRecorderUptimeOfLastStartResume = 0;\n    mediaRecorderDurationAlreadyRecorded = 0;\n\n    const stream = await getUserMedia({ audio: true });\n\n    mediaRecorder = new (window as any).MediaRecorder(\n      stream,\n      options?.web || RecordingOptionsPresets.HIGH_QUALITY.web\n    );\n\n    mediaRecorder.addEventListener('pause', () => {\n      mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n      mediaRecorderIsRecording = false;\n    });\n\n    mediaRecorder.addEventListener('resume', () => {\n      mediaRecorderUptimeOfLastStartResume = Date.now();\n      mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder.addEventListener('start', () => {\n      mediaRecorderUptimeOfLastStartResume = Date.now();\n      mediaRecorderDurationAlreadyRecorded = 0;\n      mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder.addEventListener('stop', () => {\n      mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n      mediaRecorderIsRecording = false;\n\n      // Clears recording icon in Chrome tab\n      stream.getTracks().forEach((track) => track.stop());\n    });\n\n    const { uri, ...status } = await this.getAudioRecordingStatus();\n\n    return { uri: null, status };\n  },\n  async startAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    if (mediaRecorder.state === 'paused') {\n      mediaRecorder.resume();\n    } else {\n      mediaRecorder.start();\n    }\n\n    return this.getAudioRecordingStatus();\n  },\n  async pauseAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    // Set status to paused\n    mediaRecorder.pause();\n\n    return this.getAudioRecordingStatus();\n  },\n  async stopAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    if (mediaRecorder.state === 'inactive') {\n      return this.getAudioRecordingStatus();\n    }\n\n    const dataPromise = new Promise<Blob>((resolve) =>\n      mediaRecorder.addEventListener('dataavailable', (e) => resolve(e.data))\n    );\n\n    mediaRecorder.stop();\n\n    const data = await dataPromise;\n    const url = URL.createObjectURL(data);\n\n    return {\n      ...(await this.getAudioRecordingStatus()),\n      uri: url,\n    };\n  },\n  async unloadAudioRecorder(): Promise<void> {\n    mediaRecorder = null;\n  },\n\n  async getPermissionsAsync(): Promise<PermissionResponse> {\n    const maybeStatus = await getPermissionWithQueryAsync('microphone');\n    switch (maybeStatus) {\n      case PermissionStatus.GRANTED:\n        return {\n          status: PermissionStatus.GRANTED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: true,\n        };\n      case PermissionStatus.DENIED:\n        return {\n          status: PermissionStatus.DENIED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false,\n        };\n      default:\n        return await this.requestPermissionsAsync();\n    }\n  },\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    try {\n      const stream = await getUserMedia({ audio: true });\n      stream.getTracks().forEach((track) => track.stop());\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true,\n      };\n    } catch {\n      return {\n        status: PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n    }\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}