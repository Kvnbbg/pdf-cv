{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ExponentAV from './ExponentAV';\nimport { requestFullscreen, exitFullscreen } from './FullscreenUtils.web';\nexport default {\n  get name() {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone() {\n    return 'none';\n  },\n  get ScaleToFill() {\n    return 'fill';\n  },\n  get ScaleAspectFit() {\n    return 'contain';\n  },\n  get ScaleAspectFill() {\n    return 'cover';\n  },\n  setFullscreen: function () {\n    var _setFullscreen = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(element, isFullScreenEnabled) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!isFullScreenEnabled) {\n              _context.next = 5;\n              break;\n            }\n            _context.next = 3;\n            return requestFullscreen(element);\n          case 3:\n            _context.next = 7;\n            break;\n          case 5:\n            _context.next = 7;\n            return exitFullscreen(element);\n          case 7:\n            return _context.abrupt(\"return\", ExponentAV.getStatusForVideo(element));\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    function setFullscreen(_x, _x2) {\n      return _setFullscreen.apply(this, arguments);\n    }\n    return setFullscreen;\n  }()\n};","map":{"version":3,"names":["ExponentAV","requestFullscreen","exitFullscreen","name","ScaleNone","ScaleToFill","ScaleAspectFit","ScaleAspectFill","setFullscreen","_setFullscreen","_asyncToGenerator","_regeneratorRuntime","mark","_callee","element","isFullScreenEnabled","wrap","_callee$","_context","prev","next","abrupt","getStatusForVideo","stop","_x","_x2","apply","arguments"],"sources":["/home/kevin/Documents/Github/pdf-cv/node_modules/expo-av/src/ExpoVideoManager.web.ts"],"sourcesContent":["import { AVPlaybackStatus } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { requestFullscreen, exitFullscreen } from './FullscreenUtils.web';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone(): string {\n    return 'none';\n  },\n  get ScaleToFill(): string {\n    return 'fill';\n  },\n  get ScaleAspectFit(): string {\n    return 'contain';\n  },\n  get ScaleAspectFill(): string {\n    return 'cover';\n  },\n\n  async setFullscreen(\n    element: HTMLMediaElement,\n    isFullScreenEnabled: boolean\n  ): Promise<AVPlaybackStatus> {\n    if (isFullScreenEnabled) {\n      await requestFullscreen(element);\n    } else {\n      await exitFullscreen(element);\n    }\n    return ExponentAV.getStatusForVideo(element);\n  },\n};\n"],"mappings":";;AACA,OAAOA,UAAU,MAAM,cAAc;AACrC,SAASC,iBAAiB,EAAEC,cAAc,QAAQ,uBAAuB;AAEzE,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,kBAAkB;EAC3B,CAAC;EACD,IAAIC,SAASA,CAAA;IACX,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,WAAWA,CAAA;IACb,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,cAAcA,CAAA;IAChB,OAAO,SAAS;EAClB,CAAC;EACD,IAAIC,eAAeA,CAAA;IACjB,OAAO,OAAO;EAChB,CAAC;EAEKC,aAAa;IAAA,IAAAC,cAAA,GAAAC,iBAAA,CAAAC,mBAAA,CAAAC,IAAA,UAAAC,QACjBC,OAAyB,EACzBC,mBAA4B;MAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAA,KAExBL,mBAAmB;cAAAG,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACfnB,iBAAiB,CAACa,OAAO,CAAC;UAAA;YAAAI,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAE1BlB,cAAc,CAACY,OAAO,CAAC;UAAA;YAAA,OAAAI,QAAA,CAAAG,MAAA,WAExBrB,UAAU,CAACsB,iBAAiB,CAACR,OAAO,CAAC;UAAA;UAAA;YAAA,OAAAI,QAAA,CAAAK,IAAA;QAAA;MAAA,GAAAV,OAAA;IAAA;IAAA,SAAAL,cAAAgB,EAAA,EAAAC,GAAA;MAAA,OAAAhB,cAAA,CAAAiB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAnB,aAAA;EAAA;CAE/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}