{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/kevin/Documents/Github/pdf-cv/node_modules/expo-av/build/Video.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport * as React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { assertStatusValuesInBounds, getNativeSourceAndFullInitialStatusForLoadAsync, getNativeSourceFromSource, getUnloadedStatus, PlaybackMixin } from './AV';\nimport ExpoVideoManager from './ExpoVideoManager';\nimport ExponentAV from './ExponentAV';\nimport ExponentVideo from './ExponentVideo';\nimport { ResizeMode } from './Video.types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _STYLES = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n    pointerEvents: 'box-none'\n  },\n  poster: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    resizeMode: 'contain'\n  },\n  video: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  }\n});\nvar ExpoVideoManagerConstants = ExpoVideoManager;\nvar ExpoVideoViewManager = ExpoVideoManager;\nvar Video = function (_React$Component) {\n  function Video(props) {\n    var _this;\n    _classCallCheck(this, Video);\n    _this = _callSuper(this, Video, [props]);\n    _this._nativeRef = React.createRef();\n    _this._onPlaybackStatusUpdate = null;\n    _this._handleNewStatus = function (status) {\n      if (_this.state.showPoster && status.isLoaded && (status.isPlaying || status.positionMillis !== 0)) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n      if (_this.props.onPlaybackStatusUpdate) {\n        _this.props.onPlaybackStatusUpdate(status);\n      }\n      if (_this._onPlaybackStatusUpdate) {\n        _this._onPlaybackStatusUpdate(status);\n      }\n    };\n    _this._performOperationAndHandleStatusAsync = function () {\n      var _ref = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(operation) {\n        var video, handle, status;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              video = _this._nativeRef.current;\n              if (video) {\n                _context.next = 3;\n                break;\n              }\n              throw new Error(\"Cannot complete operation because the Video component has not yet loaded\");\n            case 3:\n              handle = findNodeHandle(_this._nativeRef.current);\n              _context.next = 6;\n              return operation(handle);\n            case 6:\n              status = _context.sent;\n              _this._handleNewStatus(status);\n              return _context.abrupt(\"return\", status);\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    _this._setFullscreen = function () {\n      var _ref2 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(value) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function (tag) {\n                return ExpoVideoViewManager.setFullscreen(tag, value);\n              }));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    _this.presentFullscreenPlayer = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", _this._setFullscreen(true));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    _this.dismissFullscreenPlayer = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", _this._setFullscreen(false));\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    _this.getStatusAsync = _asyncToGenerator(_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function (tag) {\n              return ExponentAV.getStatusForVideo(tag);\n            }));\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    _this.loadAsync = function () {\n      var _ref6 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee6(source) {\n        var initialStatus,\n          downloadFirst,\n          _yield$getNativeSourc,\n          nativeSource,\n          fullInitialStatus,\n          _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              initialStatus = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n              downloadFirst = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : true;\n              _context6.next = 4;\n              return getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst);\n            case 4:\n              _yield$getNativeSourc = _context6.sent;\n              nativeSource = _yield$getNativeSourc.nativeSource;\n              fullInitialStatus = _yield$getNativeSourc.fullInitialStatus;\n              return _context6.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function (tag) {\n                return ExponentAV.loadForVideo(tag, nativeSource, fullInitialStatus);\n              }));\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      return function (_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    _this.unloadAsync = _asyncToGenerator(_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function (tag) {\n              return ExponentAV.unloadForVideo(tag);\n            }));\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }));\n    _this.setStatusAsync = function () {\n      var _ref8 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee8(status) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              assertStatusValuesInBounds(status);\n              return _context8.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function (tag) {\n                return ExponentAV.setStatusForVideo(tag, status);\n              }));\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }));\n      return function (_x4) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n    _this.replayAsync = _asyncToGenerator(_regeneratorRuntime.mark(function _callee9() {\n      var status,\n        _args9 = arguments;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            status = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};\n            if (!(status.positionMillis && status.positionMillis !== 0)) {\n              _context9.next = 3;\n              break;\n            }\n            throw new Error('Requested position after replay has to be 0.');\n          case 3:\n            return _context9.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function (tag) {\n              return ExponentAV.replayVideo(tag, _objectSpread(_objectSpread({}, status), {}, {\n                positionMillis: 0,\n                shouldPlay: true\n              }));\n            }));\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9);\n    }));\n    _this._nativeOnPlaybackStatusUpdate = function (event) {\n      _this._handleNewStatus(event.nativeEvent);\n    };\n    _this._nativeOnLoadStart = function () {\n      if (_this.props.onLoadStart) {\n        _this.props.onLoadStart();\n      }\n    };\n    _this._nativeOnLoad = function (event) {\n      if (_this.props.onLoad) {\n        _this.props.onLoad(event.nativeEvent);\n      }\n      _this._handleNewStatus(event.nativeEvent);\n    };\n    _this._nativeOnError = function (event) {\n      var error = event.nativeEvent.error;\n      if (_this.props.onError) {\n        _this.props.onError(error);\n      }\n      _this._handleNewStatus(getUnloadedStatus(error));\n    };\n    _this._nativeOnReadyForDisplay = function (event) {\n      if (_this.props.onReadyForDisplay) {\n        _this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n    _this._nativeOnFullscreenUpdate = function (event) {\n      if (_this.props.onFullscreenUpdate) {\n        _this.props.onFullscreenUpdate(event.nativeEvent);\n      }\n    };\n    _this._renderPoster = function () {\n      var _this$props$PosterCom;\n      var PosterComponent = (_this$props$PosterCom = _this.props.PosterComponent) != null ? _this$props$PosterCom : Image;\n      return _this.props.usePoster && _this.state.showPoster ? _jsxDEV(PosterComponent, {\n        style: [_STYLES.poster, _this.props.posterStyle],\n        source: _this.props.posterSource\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 65\n      }, _this) : null;\n    };\n    _this.state = {\n      showPoster: !!props.usePoster\n    };\n    return _this;\n  }\n  _inherits(Video, _React$Component);\n  return _createClass(Video, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      var nativeVideo = this._nativeRef.current;\n      if (!nativeVideo) throw new Error(\"native video reference is not defined.\");\n      nativeVideo.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unloadAsync()[\"catch\"](function () {});\n    }\n  }, {\n    key: \"setOnPlaybackStatusUpdate\",\n    value: function setOnPlaybackStatusUpdate(onPlaybackStatusUpdate) {\n      this._onPlaybackStatusUpdate = onPlaybackStatusUpdate;\n      this.getStatusAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var source = getNativeSourceFromSource(this.props.source) || undefined;\n      var nativeResizeMode = ExpoVideoManagerConstants.ScaleNone;\n      if (this.props.resizeMode) {\n        var resizeMode = this.props.resizeMode;\n        if (resizeMode === ResizeMode.STRETCH) {\n          nativeResizeMode = ExpoVideoManagerConstants.ScaleToFill;\n        } else if (resizeMode === ResizeMode.CONTAIN) {\n          nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFit;\n        } else if (resizeMode === ResizeMode.COVER) {\n          nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFill;\n        }\n      }\n      var status = _objectSpread({}, this.props.status);\n      ['progressUpdateIntervalMillis', 'positionMillis', 'shouldPlay', 'rate', 'shouldCorrectPitch', 'volume', 'isMuted', 'isLooping'].forEach(function (prop) {\n        if (prop in _this2.props) {\n          status[prop] = _this2.props[prop];\n        }\n      });\n      var nativeProps = _objectSpread(_objectSpread({}, omit(this.props, ['source', 'onPlaybackStatusUpdate', 'usePoster', 'posterSource', 'posterStyle'].concat(_toConsumableArray(Object.keys(status))))), {}, {\n        style: [_STYLES.base, this.props.style],\n        videoStyle: [_STYLES.video, this.props.videoStyle],\n        source: source,\n        resizeMode: nativeResizeMode,\n        status: status,\n        onStatusUpdate: this._nativeOnPlaybackStatusUpdate,\n        onLoadStart: this._nativeOnLoadStart,\n        onLoad: this._nativeOnLoad,\n        onError: this._nativeOnError,\n        onReadyForDisplay: this._nativeOnReadyForDisplay,\n        onFullscreenUpdate: this._nativeOnFullscreenUpdate\n      });\n      return _jsxDEV(View, {\n        style: nativeProps.style,\n        children: [_jsxDEV(ExponentVideo, _objectSpread(_objectSpread({\n          ref: this._nativeRef\n        }, nativeProps), {}, {\n          style: nativeProps.videoStyle\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }, this), this._renderPoster()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this);\n    }\n  }]);\n}(React.Component);\nfunction omit(props, propNames) {\n  var copied = _objectSpread({}, props);\n  var _iterator = _createForOfIteratorHelper(propNames),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var propName = _step.value;\n      delete copied[propName];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return copied;\n}\nObject.assign(Video.prototype, PlaybackMixin);\nexport default Video;","map":{"version":3,"names":["React","findNodeHandle","Image","StyleSheet","View","assertStatusValuesInBounds","getNativeSourceAndFullInitialStatusForLoadAsync","getNativeSourceFromSource","getUnloadedStatus","PlaybackMixin","ExpoVideoManager","ExponentAV","ExponentVideo","ResizeMode","jsxDEV","_jsxDEV","_STYLES","create","base","overflow","pointerEvents","poster","position","left","top","right","bottom","resizeMode","video","ExpoVideoManagerConstants","ExpoVideoViewManager","Video","_React$Component","props","_this","_classCallCheck","_callSuper","_nativeRef","createRef","_onPlaybackStatusUpdate","_handleNewStatus","status","state","showPoster","isLoaded","isPlaying","positionMillis","setState","onPlaybackStatusUpdate","_performOperationAndHandleStatusAsync","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","operation","handle","wrap","_callee$","_context","prev","next","current","Error","sent","abrupt","stop","_x","apply","arguments","_setFullscreen","_ref2","_callee2","value","_callee2$","_context2","tag","setFullscreen","_x2","presentFullscreenPlayer","_callee3","_callee3$","_context3","dismissFullscreenPlayer","_callee4","_callee4$","_context4","getStatusAsync","_callee5","_callee5$","_context5","getStatusForVideo","loadAsync","_ref6","_callee6","source","initialStatus","downloadFirst","_yield$getNativeSourc","nativeSource","fullInitialStatus","_args6","_callee6$","_context6","length","undefined","loadForVideo","_x3","unloadAsync","_callee7","_callee7$","_context7","unloadForVideo","setStatusAsync","_ref8","_callee8","_callee8$","_context8","setStatusForVideo","_x4","replayAsync","_callee9","_args9","_callee9$","_context9","replayVideo","_objectSpread","shouldPlay","_nativeOnPlaybackStatusUpdate","event","nativeEvent","_nativeOnLoadStart","onLoadStart","_nativeOnLoad","onLoad","_nativeOnError","error","onError","_nativeOnReadyForDisplay","onReadyForDisplay","_nativeOnFullscreenUpdate","onFullscreenUpdate","_renderPoster","_this$props$PosterCom","PosterComponent","usePoster","style","posterStyle","posterSource","fileName","_jsxFileName","lineNumber","columnNumber","_inherits","_createClass","key","setNativeProps","nativeProps","nativeVideo","componentWillUnmount","setOnPlaybackStatusUpdate","render","_this2","nativeResizeMode","ScaleNone","STRETCH","ScaleToFill","CONTAIN","ScaleAspectFit","COVER","ScaleAspectFill","forEach","prop","omit","concat","_toConsumableArray","Object","keys","videoStyle","onStatusUpdate","children","ref","Component","propNames","copied","_iterator","_createForOfIteratorHelper","_step","s","n","done","propName","err","e","f","assign","prototype"],"sources":["/home/kevin/Documents/Github/pdf-cv/node_modules/expo-av/src/Video.tsx"],"sourcesContent":["import * as React from 'react';\nimport { findNodeHandle, Image, NativeMethods, StyleSheet, View } from 'react-native';\n\nimport {\n  assertStatusValuesInBounds,\n  getNativeSourceAndFullInitialStatusForLoadAsync,\n  getNativeSourceFromSource,\n  getUnloadedStatus,\n  Playback,\n  PlaybackMixin,\n  AVPlaybackSource,\n  AVPlaybackStatus,\n  AVPlaybackStatusToSet,\n  AVPlaybackTolerance,\n  PitchCorrectionQuality,\n} from './AV';\nimport ExpoVideoManager from './ExpoVideoManager';\nimport ExponentAV from './ExponentAV';\nimport ExponentVideo from './ExponentVideo';\nimport {\n  ExponentVideoComponent,\n  VideoFullscreenUpdateEvent,\n  VideoNativeProps,\n  VideoProps,\n  VideoReadyForDisplayEvent,\n  ResizeMode,\n  VideoState,\n} from './Video.types';\n\nconst _STYLES = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n    pointerEvents: 'box-none',\n  },\n  poster: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    resizeMode: 'contain',\n  },\n  video: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n\n// On a real device UIManager should be present, however when running offline tests with jest-expo\n// we have to use the provided native module mock to access constants\nconst ExpoVideoManagerConstants = ExpoVideoManager;\nconst ExpoVideoViewManager = ExpoVideoManager;\n\nclass Video extends React.Component<VideoProps, VideoState> implements Playback {\n  _nativeRef = React.createRef<InstanceType<ExponentVideoComponent> & NativeMethods>();\n  _onPlaybackStatusUpdate: ((status: AVPlaybackStatus) => void) | null = null;\n\n  constructor(props: VideoProps) {\n    super(props);\n    this.state = {\n      showPoster: !!props.usePoster,\n    };\n  }\n\n  /**\n   * @hidden\n   */\n  setNativeProps(nativeProps: VideoNativeProps) {\n    const nativeVideo = this._nativeRef.current;\n    if (!nativeVideo) throw new Error(`native video reference is not defined.`);\n    nativeVideo.setNativeProps(nativeProps);\n  }\n\n  // Internal methods\n\n  _handleNewStatus = (status: AVPlaybackStatus) => {\n    if (\n      this.state.showPoster &&\n      status.isLoaded &&\n      (status.isPlaying || status.positionMillis !== 0)\n    ) {\n      this.setState({ showPoster: false });\n    }\n\n    if (this.props.onPlaybackStatusUpdate) {\n      this.props.onPlaybackStatusUpdate(status);\n    }\n    if (this._onPlaybackStatusUpdate) {\n      this._onPlaybackStatusUpdate(status);\n    }\n  };\n\n  _performOperationAndHandleStatusAsync = async (\n    operation: (tag: number) => Promise<AVPlaybackStatus>\n  ): Promise<AVPlaybackStatus> => {\n    const video = this._nativeRef.current;\n    if (!video) {\n      throw new Error(`Cannot complete operation because the Video component has not yet loaded`);\n    }\n\n    const handle = findNodeHandle(this._nativeRef.current)!;\n    const status: AVPlaybackStatus = await operation(handle);\n    this._handleNewStatus(status);\n    return status;\n  };\n\n  // Fullscreening API\n\n  _setFullscreen = async (value: boolean): Promise<AVPlaybackStatus> => {\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExpoVideoViewManager.setFullscreen(tag, value)\n    );\n  };\n\n  /**\n   * This presents a fullscreen view of your video component on top of your app's UI. Note that even if `useNativeControls` is set to `false`,\n   * native controls will be visible in fullscreen mode.\n   * @return A `Promise` that is fulfilled with the `AVPlaybackStatus` of the video once the fullscreen player has finished presenting,\n   * or rejects if there was an error, or if this was called on an Android device.\n   */\n  presentFullscreenPlayer = async (): Promise<AVPlaybackStatus> => {\n    return this._setFullscreen(true);\n  };\n\n  /**\n   * This dismisses the fullscreen video view.\n   * @return A `Promise` that is fulfilled with the `AVPlaybackStatus` of the video once the fullscreen player has finished dismissing,\n   * or rejects if there was an error, or if this was called on an Android device.\n   */\n  dismissFullscreenPlayer = async (): Promise<AVPlaybackStatus> => {\n    return this._setFullscreen(false);\n  };\n\n  // ### Unified playback API ### (consistent with Audio.js)\n  // All calls automatically call onPlaybackStatusUpdate as a side effect.\n\n  /**\n   * @hidden\n   */\n  getStatusAsync = async (): Promise<AVPlaybackStatus> => {\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.getStatusForVideo(tag)\n    );\n  };\n\n  /**\n   * @hidden\n   */\n  loadAsync = async (\n    source: AVPlaybackSource,\n    initialStatus: AVPlaybackStatusToSet = {},\n    downloadFirst: boolean = true\n  ): Promise<AVPlaybackStatus> => {\n    const { nativeSource, fullInitialStatus } =\n      await getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst);\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.loadForVideo(tag, nativeSource, fullInitialStatus)\n    );\n  };\n\n  /**\n   * Equivalent to setting URI to `null`.\n   * @hidden\n   */\n  unloadAsync = async (): Promise<AVPlaybackStatus> => {\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.unloadForVideo(tag)\n    );\n  };\n\n  componentWillUnmount() {\n    // Auto unload video to perform necessary cleanup safely\n    this.unloadAsync().catch(() => {\n      // Ignored rejection. Sometimes the unloadAsync code is executed when video is already unloaded.\n      // In such cases, it throws:\n      // \"[Unhandled promise rejection: Error: Invalid view returned from registry,\n      //  expecting EXVideo, got: (null)]\"\n    });\n  }\n\n  /**\n   * Set status API, only available while `isLoaded = true`.\n   * @hidden\n   */\n  setStatusAsync = async (status: AVPlaybackStatusToSet): Promise<AVPlaybackStatus> => {\n    assertStatusValuesInBounds(status);\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.setStatusForVideo(tag, status)\n    );\n  };\n\n  /**\n   * @hidden\n   */\n  replayAsync = async (status: AVPlaybackStatusToSet = {}): Promise<AVPlaybackStatus> => {\n    if (status.positionMillis && status.positionMillis !== 0) {\n      throw new Error('Requested position after replay has to be 0.');\n    }\n\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.replayVideo(tag, {\n        ...status,\n        positionMillis: 0,\n        shouldPlay: true,\n      })\n    );\n  };\n\n  /**\n   * Sets a function to be called regularly with the `AVPlaybackStatus` of the playback object.\n   *\n   * `onPlaybackStatusUpdate` will be called whenever a call to the API for this playback object completes\n   * (such as `setStatusAsync()`, `getStatusAsync()`, or `unloadAsync()`), nd will also be called at regular intervals\n   * while the media is in the loaded state.\n   *\n   * Set `progressUpdateIntervalMillis` via `setStatusAsync()` or `setProgressUpdateIntervalAsync()` to modify\n   * the interval with which `onPlaybackStatusUpdate` is called while loaded.\n   *\n   * @param onPlaybackStatusUpdate A function taking a single parameter `AVPlaybackStatus`.\n   */\n  setOnPlaybackStatusUpdate(onPlaybackStatusUpdate: ((status: AVPlaybackStatus) => void) | null) {\n    this._onPlaybackStatusUpdate = onPlaybackStatusUpdate;\n    this.getStatusAsync();\n  }\n\n  // Methods of the Playback interface that are set via PlaybackMixin\n  playAsync!: () => Promise<AVPlaybackStatus>;\n  playFromPositionAsync!: (\n    positionMillis: number,\n    tolerances?: AVPlaybackTolerance\n  ) => Promise<AVPlaybackStatus>;\n  pauseAsync!: () => Promise<AVPlaybackStatus>;\n  stopAsync!: () => Promise<AVPlaybackStatus>;\n  setPositionAsync!: (\n    positionMillis: number,\n    tolerances?: AVPlaybackTolerance\n  ) => Promise<AVPlaybackStatus>;\n  setRateAsync!: (\n    rate: number,\n    shouldCorrectPitch: boolean,\n    pitchCorrectionQuality?: PitchCorrectionQuality\n  ) => Promise<AVPlaybackStatus>;\n  setVolumeAsync!: (volume: number, audioPan?: number) => Promise<AVPlaybackStatus>;\n  setIsMutedAsync!: (isMuted: boolean) => Promise<AVPlaybackStatus>;\n  setIsLoopingAsync!: (isLooping: boolean) => Promise<AVPlaybackStatus>;\n  setProgressUpdateIntervalAsync!: (\n    progressUpdateIntervalMillis: number\n  ) => Promise<AVPlaybackStatus>;\n\n  // Callback wrappers\n\n  _nativeOnPlaybackStatusUpdate = (event: { nativeEvent: AVPlaybackStatus }) => {\n    this._handleNewStatus(event.nativeEvent);\n  };\n\n  // TODO make sure we are passing the right stuff\n  _nativeOnLoadStart = () => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart();\n    }\n  };\n\n  _nativeOnLoad = (event: { nativeEvent: AVPlaybackStatus }) => {\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n    this._handleNewStatus(event.nativeEvent);\n  };\n\n  _nativeOnError = (event: { nativeEvent: { error: string } }) => {\n    const error: string = event.nativeEvent.error;\n    if (this.props.onError) {\n      this.props.onError(error);\n    }\n    this._handleNewStatus(getUnloadedStatus(error));\n  };\n\n  _nativeOnReadyForDisplay = (event: { nativeEvent: VideoReadyForDisplayEvent }) => {\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _nativeOnFullscreenUpdate = (event: { nativeEvent: VideoFullscreenUpdateEvent }) => {\n    if (this.props.onFullscreenUpdate) {\n      this.props.onFullscreenUpdate(event.nativeEvent);\n    }\n  };\n\n  _renderPoster = () => {\n    const PosterComponent = this.props.PosterComponent ?? Image;\n\n    return this.props.usePoster && this.state.showPoster ? (\n      <PosterComponent\n        style={[_STYLES.poster, this.props.posterStyle]}\n        source={this.props.posterSource!}\n      />\n    ) : null;\n  };\n\n  render() {\n    const source = getNativeSourceFromSource(this.props.source) || undefined;\n\n    let nativeResizeMode = ExpoVideoManagerConstants.ScaleNone;\n    if (this.props.resizeMode) {\n      const resizeMode = this.props.resizeMode;\n      if (resizeMode === ResizeMode.STRETCH) {\n        nativeResizeMode = ExpoVideoManagerConstants.ScaleToFill;\n      } else if (resizeMode === ResizeMode.CONTAIN) {\n        nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFit;\n      } else if (resizeMode === ResizeMode.COVER) {\n        nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFill;\n      }\n    }\n\n    // Set status via individual props\n    const status: AVPlaybackStatusToSet = { ...this.props.status };\n    [\n      'progressUpdateIntervalMillis',\n      'positionMillis',\n      'shouldPlay',\n      'rate',\n      'shouldCorrectPitch',\n      'volume',\n      'isMuted',\n      'isLooping',\n    ].forEach((prop) => {\n      if (prop in this.props) {\n        status[prop] = this.props[prop];\n      }\n    });\n\n    // Replace selected native props\n    const nativeProps: VideoNativeProps = {\n      ...omit(this.props, [\n        'source',\n        'onPlaybackStatusUpdate',\n        'usePoster',\n        'posterSource',\n        'posterStyle',\n        ...Object.keys(status),\n      ]),\n      style: [_STYLES.base, this.props.style],\n      videoStyle: [_STYLES.video, this.props.videoStyle],\n      source,\n      resizeMode: nativeResizeMode,\n      status,\n      onStatusUpdate: this._nativeOnPlaybackStatusUpdate,\n      onLoadStart: this._nativeOnLoadStart,\n      onLoad: this._nativeOnLoad,\n      onError: this._nativeOnError,\n      onReadyForDisplay: this._nativeOnReadyForDisplay,\n      onFullscreenUpdate: this._nativeOnFullscreenUpdate,\n    };\n\n    return (\n      <View style={nativeProps.style}>\n        <ExponentVideo ref={this._nativeRef} {...nativeProps} style={nativeProps.videoStyle} />\n        {this._renderPoster()}\n      </View>\n    );\n  }\n}\n\nfunction omit(props: Record<string, any>, propNames: string[]) {\n  const copied = { ...props };\n  for (const propName of propNames) {\n    delete copied[propName];\n  }\n  return copied;\n}\n\nObject.assign(Video.prototype, PlaybackMixin);\n\n// note(simek): TypeDoc cannot resolve correctly name of inline and default exported class\nexport default Video;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}