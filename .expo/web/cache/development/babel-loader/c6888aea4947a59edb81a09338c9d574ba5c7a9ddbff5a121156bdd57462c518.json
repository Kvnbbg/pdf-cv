{"ast":null,"code":"\"use strict\";\n\nfunction dedent(strings) {\n  var raw = undefined;\n  if (typeof strings === \"string\") {\n    raw = [strings];\n  } else {\n    raw = strings.raw;\n  }\n  var result = \"\";\n  for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n  for (var i = 0; i < raw.length; i++) {\n    result += raw[i].replace(/\\\\\\n[ \\t]*/g, \"\").replace(/\\\\`/g, \"`\");\n    if (i < values.length) {\n      result += values[i];\n    }\n  }\n  result = result.trim();\n  var lines = result.split(\"\\n\");\n  var mindent = null;\n  lines.forEach(function (l) {\n    var m = l.match(/^ +/);\n    if (m) {\n      var indent = m[0].length;\n      if (!mindent) {\n        mindent = indent;\n      } else {\n        mindent = Math.min(mindent, indent);\n      }\n    }\n  });\n  if (mindent !== null) {\n    result = lines.map(function (l) {\n      return l[0] === \" \" ? l.slice(mindent) : l;\n    }).join(\"\\n\");\n  }\n  return result.replace(/\\\\n/g, \"\\n\");\n}\nif (typeof module !== \"undefined\") {\n  module.exports = dedent;\n}","map":{"version":3,"names":["dedent","strings","raw","undefined","result","_len","arguments","length","values","Array","_key","i","replace","trim","lines","split","mindent","forEach","l","m","match","indent","Math","min","map","slice","join","module","exports"],"sources":["/home/kevin/Documents/Github/pdf-cv/pdf-cv/node_modules/react-native-safe-modules/node_modules/dedent/dist/dedent.js"],"sourcesContent":["\"use strict\";\n\nfunction dedent(strings) {\n\n  var raw = undefined;\n  if (typeof strings === \"string\") {\n    // dedent can be used as a plain function\n    raw = [strings];\n  } else {\n    raw = strings.raw;\n  }\n\n  // first, perform interpolation\n  var result = \"\";\n\n  for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < raw.length; i++) {\n    result += raw[i].\n    // join lines when there is a suppressed newline\n    replace(/\\\\\\n[ \\t]*/g, \"\").\n\n    // handle escaped backticks\n    replace(/\\\\`/g, \"`\");\n\n    if (i < values.length) {\n      result += values[i];\n    }\n  }\n\n  // dedent eats leading and trailing whitespace too\n  result = result.trim();\n\n  // now strip indentation\n  var lines = result.split(\"\\n\");\n  var mindent = null;\n  lines.forEach(function (l) {\n    var m = l.match(/^ +/);\n    if (m) {\n      var indent = m[0].length;\n      if (!mindent) {\n        // this is the first indented line\n        mindent = indent;\n      } else {\n        mindent = Math.min(mindent, indent);\n      }\n    }\n  });\n\n  if (mindent !== null) {\n    result = lines.map(function (l) {\n      return l[0] === \" \" ? l.slice(mindent) : l;\n    }).join(\"\\n\");\n  }\n\n  // handle escaped newlines at the end to ensure they don't get stripped too\n  return result.replace(/\\\\n/g, \"\\n\");\n}\n\nif (typeof module !== \"undefined\") {\n  module.exports = dedent;\n}"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,MAAMA,CAACC,OAAO,EAAE;EAEvB,IAAIC,GAAG,GAAGC,SAAS;EACnB,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE;IAE/BC,GAAG,GAAG,CAACD,OAAO,CAAC;EACjB,CAAC,MAAM;IACLC,GAAG,GAAGD,OAAO,CAACC,GAAG;EACnB;EAGA,IAAIE,MAAM,GAAG,EAAE;EAEf,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,MAAM,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IACxGF,MAAM,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EACpC;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,GAAG,CAACK,MAAM,EAAEI,CAAC,EAAE,EAAE;IACnCP,MAAM,IAAIF,GAAG,CAACS,CAAC,CAAC,CAEhBC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAG1BA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IAEpB,IAAID,CAAC,GAAGH,MAAM,CAACD,MAAM,EAAE;MACrBH,MAAM,IAAII,MAAM,CAACG,CAAC,CAAC;IACrB;EACF;EAGAP,MAAM,GAAGA,MAAM,CAACS,IAAI,CAAC,CAAC;EAGtB,IAAIC,KAAK,GAAGV,MAAM,CAACW,KAAK,CAAC,IAAI,CAAC;EAC9B,IAAIC,OAAO,GAAG,IAAI;EAClBF,KAAK,CAACG,OAAO,CAAC,UAAUC,CAAC,EAAE;IACzB,IAAIC,CAAC,GAAGD,CAAC,CAACE,KAAK,CAAC,KAAK,CAAC;IACtB,IAAID,CAAC,EAAE;MACL,IAAIE,MAAM,GAAGF,CAAC,CAAC,CAAC,CAAC,CAACZ,MAAM;MACxB,IAAI,CAACS,OAAO,EAAE;QAEZA,OAAO,GAAGK,MAAM;MAClB,CAAC,MAAM;QACLL,OAAO,GAAGM,IAAI,CAACC,GAAG,CAACP,OAAO,EAAEK,MAAM,CAAC;MACrC;IACF;EACF,CAAC,CAAC;EAEF,IAAIL,OAAO,KAAK,IAAI,EAAE;IACpBZ,MAAM,GAAGU,KAAK,CAACU,GAAG,CAAC,UAAUN,CAAC,EAAE;MAC9B,OAAOA,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,CAAC,CAACO,KAAK,CAACT,OAAO,CAAC,GAAGE,CAAC;IAC5C,CAAC,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC;EACf;EAGA,OAAOtB,MAAM,CAACQ,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;AACrC;AAEA,IAAI,OAAOe,MAAM,KAAK,WAAW,EAAE;EACjCA,MAAM,CAACC,OAAO,GAAG5B,MAAM;AACzB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}