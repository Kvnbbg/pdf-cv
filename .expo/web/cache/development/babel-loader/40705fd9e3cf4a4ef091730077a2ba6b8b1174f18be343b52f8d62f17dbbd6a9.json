{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nexport default function useFocusedListenersChildrenAdapter(_ref) {\n  var navigation = _ref.navigation,\n    focusedListeners = _ref.focusedListeners;\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n    addListener = _React$useContext.addListener;\n  var listener = React.useCallback(function (callback) {\n    if (navigation.isFocused()) {\n      var _iterator = _createForOfIteratorHelper(focusedListeners),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _listener = _step.value;\n          var _listener2 = _listener(callback),\n            handled = _listener2.handled,\n            result = _listener2.result;\n          if (handled) {\n            return {\n              handled: handled,\n              result: result\n            };\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return {\n        handled: true,\n        result: callback(navigation)\n      };\n    } else {\n      return {\n        handled: false,\n        result: null\n      };\n    }\n  }, [focusedListeners, navigation]);\n  React.useEffect(function () {\n    return addListener === null || addListener === void 0 ? void 0 : addListener('focus', listener);\n  }, [addListener, listener]);\n}","map":{"version":3,"names":["React","NavigationBuilderContext","useFocusedListenersChildrenAdapter","_ref","navigation","focusedListeners","_React$useContext","useContext","addListener","listener","useCallback","callback","isFocused","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","_listener2","handled","result","err","e","f","useEffect"],"sources":["/home/kevin/Documents/Github/pdf-cv/pdf-cv/node_modules/@react-navigation/core/src/useFocusedListenersChildrenAdapter.tsx"],"sourcesContent":["import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  FocusedNavigationCallback,\n  FocusedNavigationListener,\n} from './NavigationBuilderContext';\nimport type { NavigationHelpers } from './types';\n\ntype Options = {\n  navigation: NavigationHelpers<ParamListBase>;\n  focusedListeners: FocusedNavigationListener[];\n};\n\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter({\n  navigation,\n  focusedListeners,\n}: Options) {\n  const { addListener } = React.useContext(NavigationBuilderContext);\n\n  const listener = React.useCallback(\n    (callback: FocusedNavigationCallback<any>) => {\n      if (navigation.isFocused()) {\n        for (const listener of focusedListeners) {\n          const { handled, result } = listener(callback);\n\n          if (handled) {\n            return { handled, result };\n          }\n        }\n\n        return { handled: true, result: callback(navigation) };\n      } else {\n        return { handled: false, result: null };\n      }\n    },\n    [focusedListeners, navigation]\n  );\n\n  React.useEffect(\n    () => addListener?.('focus', listener),\n    [addListener, listener]\n  );\n}\n"],"mappings":";;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,wBAAwB,MAGxB,4BAA4B;AAWnC,eAAe,SAASC,kCAAkCA,CAAAC,IAAA,EAG9C;EAAA,IAFVC,UAAU,GAEFD,IAAA,CAFRC,UAAU;IACVC,gBAAA,GACQF,IAAA,CADRE,gBAAA;EAEA,IAAAC,iBAAA,GAAwBN,KAAK,CAACO,UAAU,CAACN,wBAAwB,CAAC;IAA1DO,WAAA,GAAAF,iBAAA,CAAAE,WAAA;EAER,IAAMC,QAAQ,GAAGT,KAAK,CAACU,WAAW,CAC/B,UAAAC,QAAwC,EAAK;IAC5C,IAAIP,UAAU,CAACQ,SAAS,EAAE,EAAE;MAAA,IAAAC,SAAA,GAAAC,0BAAA,CACHT,gBAAgB;QAAAU,KAAA;MAAA;QAAvC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAyC;UAAA,IAA9BT,SAAQ,GAAAM,KAAA,CAAAI,KAAA;UACjB,IAAAC,UAAA,GAA4BX,SAAQ,CAACE,QAAQ,CAAC;YAAtCU,OAAO,GAAAD,UAAA,CAAPC,OAAO;YAAEC,MAAA,GAAAF,UAAA,CAAAE,MAAA;UAEjB,IAAID,OAAO,EAAE;YACX,OAAO;cAAEA,OAAO,EAAPA,OAAO;cAAEC,MAAA,EAAAA;YAAO,CAAC;UAC5B;QACF;MAAA,SAAAC,GAAA;QAAAV,SAAA,CAAAW,CAAA,CAAAD,GAAA;MAAA;QAAAV,SAAA,CAAAY,CAAA;MAAA;MAEA,OAAO;QAAEJ,OAAO,EAAE,IAAI;QAAEC,MAAM,EAAEX,QAAQ,CAACP,UAAU;MAAE,CAAC;IACxD,CAAC,MAAM;MACL,OAAO;QAAEiB,OAAO,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAK,CAAC;IACzC;EACF,CAAC,EACD,CAACjB,gBAAgB,EAAED,UAAU,CAAC,CAC/B;EAEDJ,KAAK,CAAC0B,SAAS,CACb;IAAA,OAAMlB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAG,OAAO,EAAEC,QAAQ,CAAC;EAAA,GACtC,CAACD,WAAW,EAAEC,QAAQ,CAAC,CACxB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}